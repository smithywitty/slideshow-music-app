{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smith\\\\Documents\\\\slideshow-music-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight, Pencil, Check } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvancedSlideshow = () => {\n  _s();\n  var _images, _slides$currentSlide, _slides$currentSlide2;\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual');\n  const [autoShiftEnabled, setAutoShiftEnabled] = useState(true);\n  const [previewChanges, setPreviewChanges] = useState(null);\n  const [editingSlideId, setEditingSlideId] = useState(null);\n  const hideTimeoutRef = useRef(null);\n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Handle audio file upload\n  const handleAudioUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({\n          url,\n          name: file.name\n        });\n      }\n    });\n    setImages(imageUrls);\n    setCurrentSlide(0);\n\n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    event.target.value = '';\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const srtText = e.target.result;\n        const parsedSlides = parseSRT(srtText);\n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = imageCount => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10,\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Parse SRT file\n  const parseSRT = srtText => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n        const timeMatch = timeLine.match(/^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/);\n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n          const text = textLines.join('\\n').trim();\n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n    return parsedSlides;\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  const handleSeek = e => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = e.target.value / 100 * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Format seconds to display string\n  const formatSeconds = seconds => {\n    return `${seconds.toFixed(1)}s`;\n  };\n\n  // Auto-shift logic\n  const autoShiftSubsequentSlides = (changedSlideId, newEndTime, oldEndTime) => {\n    const timeDifference = newEndTime - oldEndTime;\n    const changedSlideIndex = slides.findIndex(slide => slide.id === changedSlideId);\n\n    // Validasi minimum gap dan durasi\n    const MIN_GAP = 0.1;\n    const MIN_DURATION = 0.1;\n\n    // Validasi slide yang diubah\n    const currentSlide = slides[changedSlideIndex];\n    if (newEndTime <= currentSlide.startTime) {\n      return null; // Waktu akhir harus lebih besar dari waktu awal\n    }\n\n    // Validasi gap dengan slide berikutnya\n    const nextSlide = slides[changedSlideIndex + 1];\n    if (nextSlide && newEndTime + MIN_GAP > nextSlide.startTime) {\n      return null; // Gap terlalu kecil\n    }\n    const updatedSlides = slides.map((slide, index) => {\n      if (index > changedSlideIndex) {\n        const newStartTime = slide.startTime + timeDifference;\n        const newEndTime = slide.endTime + timeDifference;\n\n        // Validasi durasi minimum\n        if (newEndTime - newStartTime < MIN_DURATION) {\n          return null; // Durasi terlalu pendek\n        }\n\n        // Validasi gap dengan slide sebelumnya\n        const prevSlide = index > 0 ? updatedSlides[index - 1] : null;\n        if (prevSlide && newStartTime - prevSlide.endTime < MIN_GAP) {\n          return null; // Gap terlalu kecil\n        }\n        return {\n          ...slide,\n          startTime: newStartTime,\n          endTime: newEndTime\n        };\n      }\n      return slide;\n    });\n\n    // Filter out any null values (invalid timings)\n    return updatedSlides.filter(slide => slide !== null);\n  };\n\n  // Update slide time with seconds\n  const updateSlideTime = (slideId, field, value) => {\n    const seconds = parseFloat(value);\n    if (isNaN(seconds) || seconds < 0) return;\n    setSlides(prevSlides => {\n      const currentSlide = prevSlides.find(slide => slide.id === slideId);\n      if (!currentSlide) return prevSlides;\n      if (field === 'text') {\n        return prevSlides.map(slide => slide.id === slideId ? {\n          ...slide,\n          text: value\n        } : slide);\n      }\n\n      // Validasi waktu\n      if (field === 'startTime') {\n        if (seconds >= currentSlide.endTime) return prevSlides; // Waktu awal harus lebih kecil dari waktu akhir\n      }\n      if (field === 'endTime') {\n        if (seconds <= currentSlide.startTime) return prevSlides; // Waktu akhir harus lebih besar dari waktu awal\n      }\n      if (field === 'endTime' && autoShiftEnabled) {\n        const shiftedSlides = autoShiftSubsequentSlides(slideId, seconds, currentSlide.endTime);\n        if (shiftedSlides) {\n          const affectedSlides = shiftedSlides.filter((s, i) => i > prevSlides.findIndex(slide => slide.id === slideId));\n          setPreviewChanges({\n            changedSlideId: slideId,\n            newEndTime: seconds,\n            affectedSlides\n          });\n          return prevSlides.map(slide => {\n            if (slide.id === slideId) {\n              return {\n                ...slide,\n                endTime: seconds\n              };\n            }\n            const shiftedSlide = shiftedSlides.find(s => s.id === slide.id);\n            return shiftedSlide || slide;\n          });\n        }\n        return prevSlides;\n      }\n      return prevSlides.map(slide => slide.id === slideId ? {\n        ...slide,\n        [field]: seconds\n      } : slide);\n    });\n  };\n\n  // Quick time adjustment\n  const adjustTime = (slideId, field, adjustment) => {\n    setSlides(prevSlides => {\n      const updatedSlides = prevSlides.map(slide => {\n        if (slide.id === slideId) {\n          const newTime = slide[field] + adjustment;\n          if (newTime < 0) return slide;\n          if (autoShiftEnabled && field === 'endTime') {\n            const shiftedSlides = autoShiftSubsequentSlides(slideId, newTime, slide.endTime);\n            if (shiftedSlides) {\n              setPreviewChanges({\n                changedSlideId: slideId,\n                newEndTime: newTime,\n                affectedSlides: shiftedSlides.filter((s, i) => i > prevSlides.findIndex(slide => slide.id === slideId))\n              });\n              return {\n                ...slide,\n                [field]: newTime\n              };\n            }\n            return slide;\n          }\n          return {\n            ...slide,\n            [field]: newTime\n          };\n        }\n        return slide;\n      });\n\n      // Apply auto-shift changes if preview exists\n      if (previewChanges && previewChanges.changedSlideId === slideId) {\n        return updatedSlides.map(slide => {\n          const affectedSlide = previewChanges.affectedSlides.find(s => s.id === slide.id);\n          return affectedSlide || slide;\n        });\n      }\n      return updatedSlides;\n    });\n  };\n\n  // Apply preview changes\n  const applyPreviewChanges = () => {\n    if (previewChanges) {\n      setSlides(prevSlides => prevSlides.map(slide => {\n        const affectedSlide = previewChanges.affectedSlides.find(s => s.id === slide.id);\n        return affectedSlide || slide;\n      }));\n      setPreviewChanges(null);\n    }\n  };\n\n  // Cancel preview changes\n  const cancelPreviewChanges = () => {\n    setPreviewChanges(null);\n  };\n\n  // Auto-hide controls handler\n  const handleMouseMove = () => {\n    setControlsVisible(true);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n    hideTimeoutRef.current = setTimeout(() => {\n      setControlsVisible(false);\n    }, 2000);\n  };\n  const handleMouseLeave = () => {\n    setControlsVisible(false);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Reset controls visibility when exiting fullscreen\n  useEffect(() => {\n    if (!isFullscreen) {\n      setControlsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    }\n  }, [isFullscreen]);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = event => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = slideId => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    const blob = new Blob([srtContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor(seconds % 1 * 1000);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isFullscreen ? 'fullscreen' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [!isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-title\",\n          children: \"Advanced Slideshow with Custom Timing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Audio File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \"audio/*\",\n                onChange: handleAudioUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRef$current;\n                  return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                },\n                className: \"upload-button audio-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), \"Choose Audio\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: imageInputRef,\n                type: \"file\",\n                accept: \"image/*\",\n                multiple: true,\n                onChange: handleImagesUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _imageInputRef$curren;\n                  return (_imageInputRef$curren = imageInputRef.current) === null || _imageInputRef$curren === void 0 ? void 0 : _imageInputRef$curren.click();\n                },\n                className: \"upload-button image-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 21\n                }, this), \"Images (\", images.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload SRT File (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: srtInputRef,\n                type: \"file\",\n                accept: \".srt\",\n                onChange: handleSRTUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _srtInputRef$current;\n                  return (_srtInputRef$current = srtInputRef.current) === null || _srtInputRef$current === void 0 ? void 0 : _srtInputRef$current.click();\n                },\n                className: \"upload-button srt-button\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this), \"SRT Timing\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timing-mode\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'manual' ? 'active' : ''}`,\n              children: \"Manual Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'srt' ? 'active' : ''}`,\n              children: [\"SRT Timing \", srtFile && `(${srtFile})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`,\n          style: {\n            cursor: controlsVisible ? 'default' : 'none'\n          },\n          ref: slideshowRef,\n          onMouseMove: handleMouseMove,\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slideshow-display\",\n            children: images.length > 0 && slides.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_images = images[((_slides$currentSlide = slides[currentSlide]) === null || _slides$currentSlide === void 0 ? void 0 : _slides$currentSlide.imageIndex) || 0]) === null || _images === void 0 ? void 0 : _images.url,\n                alt: `Slide ${currentSlide + 1}`,\n                className: `slide-image ${isFullscreen ? 'fullscreen-image' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-text-container\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"slide-text\",\n                  children: ((_slides$currentSlide2 = slides[currentSlide]) === null || _slides$currentSlide2 === void 0 ? void 0 : _slides$currentSlide2.text) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `slide-counter ${controlsVisible ? 'show' : 'hide'}`,\n                children: [currentSlide + 1, \" / \", slides.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `time-counter ${controlsVisible ? 'show' : 'hide'}`,\n                children: [formatTime(currentTime), \" / \", formatTime(duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleFullscreen,\n                className: `fullscreen-button ${controlsVisible ? 'show' : 'hide'}`,\n                title: isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n                children: isFullscreen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this), isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToPreviousSlide,\n                  className: `nav-button prev-button ${controlsVisible ? 'show' : 'hide'}`,\n                  disabled: currentSlide === 0,\n                  children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToNextSlide,\n                  className: `nav-button next-button ${controlsVisible ? 'show' : 'hide'}`,\n                  disabled: currentSlide === slides.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, currentSlide, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-slideshow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-content\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 48,\n                  className: \"empty-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload audio, images, and set timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), audioFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''} ${controlsVisible ? 'show' : 'hide'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              ref: audioRef,\n              src: audioFile,\n              onLoadedMetadata: handleLoadedMetadata,\n              onTimeUpdate: handleTimeUpdate,\n              onEnded: () => setIsPlaying(false),\n              className: \"hidden-audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-controls-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePlayPause,\n                className: \"play-button\",\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seek-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: duration ? currentTime / duration * 100 : 0,\n                  onChange: handleSeek,\n                  className: \"seek-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-control\",\n                children: [/*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 20,\n                  className: \"volume-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"1\",\n                  step: \"0.1\",\n                  value: volume,\n                  onChange: handleVolumeChange,\n                  className: \"volume-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addSlideAtCurrentTime,\n              disabled: !audioFile,\n              className: \"add-slide-button\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 21\n              }, this), \"Add Slide at \", formatTime(currentTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timing-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-title-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"editor-title\",\n                children: \"Timing Editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auto-shift-toggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"toggle-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: autoShiftEnabled,\n                    onChange: e => setAutoShiftEnabled(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"toggle-text\",\n                    children: \"Auto-Shift\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `toggle-status ${autoShiftEnabled ? 'enabled' : 'disabled'}`,\n                    children: autoShiftEnabled ? 'ON' : 'OFF'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSlides([]),\n                disabled: slides.length === 0,\n                className: \"clear-button\",\n                children: \"Clear All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: exportToSRT,\n                disabled: slides.length === 0,\n                className: \"export-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 21\n                }, this), \"Export SRT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this), previewChanges && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preview-warning\",\n                children: [\"Will shift \", previewChanges.affectedSlides.length, \" slides\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: applyPreviewChanges,\n                  className: \"apply-button\",\n                  children: \"Apply Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelPreviewChanges,\n                  className: \"cancel-button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-timeline\",\n              children: [previewChanges.affectedSlides.slice(0, 3).map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-text\",\n                  children: slide.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-time\",\n                  children: [formatSeconds(slide.startTime), \" \\u2192 \", formatSeconds(slide.endTime)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 25\n                }, this)]\n              }, slide.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 23\n              }, this)), previewChanges.affectedSlides.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-more\",\n                children: [\"+\", previewChanges.affectedSlides.length - 3, \" more slides\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slides-timeline\",\n            children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `slide-item ${index === currentSlide ? 'active' : ''} ${editingSlideId === slide.id ? 'editing' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-text-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: slide.text,\n                    onChange: e => updateSlideTime(slide.id, 'text', e.target.value),\n                    className: \"timing-input text-input\",\n                    placeholder: \"Slide text\",\n                    rows: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-display\",\n                  children: editingSlideId === slide.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time-editor\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"time-inputs\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"time-input-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Start\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 831,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          value: slide.startTime,\n                          onChange: e => updateSlideTime(slide.id, 'startTime', e.target.value),\n                          step: \"0.1\",\n                          min: \"0\",\n                          className: \"timing-input\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 832,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"quick-adjust\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', -1),\n                            children: \"-1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 841,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', -0.5),\n                            children: \"-0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 842,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', 0.5),\n                            children: \"+0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 843,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', 1),\n                            children: \"+1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 844,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 840,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 830,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"time-input-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"End\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 848,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          value: slide.endTime,\n                          onChange: e => updateSlideTime(slide.id, 'endTime', e.target.value),\n                          step: \"0.1\",\n                          min: \"0\",\n                          className: `timing-input ${autoShiftEnabled ? 'auto-shift-enabled' : ''}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 849,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"quick-adjust\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', -1),\n                            children: \"-1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 858,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', -0.5),\n                            children: \"-0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 859,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', 0.5),\n                            children: \"+0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 860,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', 1),\n                            children: \"+1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 861,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 857,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 847,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 829,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timeline-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"timeline-progress\",\n                        style: {\n                          left: `${slide.startTime / duration * 100}%`,\n                          width: `${(slide.endTime - slide.startTime) / duration * 100}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 866,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 865,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 828,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time-display\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [formatSeconds(slide.startTime), \" \\u2192 \", formatSeconds(slide.endTime)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 874,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setEditingSlideId(slide.id),\n                      className: \"edit-button\",\n                      children: /*#__PURE__*/_jsxDEV(Pencil, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 879,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 875,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-actions\",\n                  children: editingSlideId === slide.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setEditingSlideId(null),\n                    className: \"check-button\",\n                    children: /*#__PURE__*/_jsxDEV(Check, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 890,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 886,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteSlide(slide.id),\n                    className: \"delete-button\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 893,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 21\n              }, this)\n            }, slide.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 19\n            }, this)), slides.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-timeline\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                size: 32,\n                className: \"empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No slides added yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-subtext\",\n                children: \"Upload images and add timing, or use SRT file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"Manual Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Play audio and click \\\"Add Slide at [time]\\\" for each slide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Edit slide text and timing in the editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Export to SRT if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"SRT File Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Create or download SRT subtitle file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload SRT file - timing will be applied automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Fine-tune timing if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"srt-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"example-title\",\n            children: \"SRT Format Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"example-code\",\n            children: `1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 523,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedSlideshow, \"sGCbPRS4JXVettNofvkuDFRbM0o=\");\n_c = AdvancedSlideshow;\nexport default AdvancedSlideshow;\nvar _c;\n$RefreshReg$(_c, \"AdvancedSlideshow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Play","Pause","Upload","Volume2","Plus","Download","Trash2","Clock","FileText","Maximize2","Minimize2","ChevronLeft","ChevronRight","Pencil","Check","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvancedSlideshow","_s","_images","_slides$currentSlide","_slides$currentSlide2","audioFile","setAudioFile","images","setImages","currentSlide","setCurrentSlide","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","isFullscreen","setIsFullscreen","controlsVisible","setControlsVisible","slides","setSlides","srtFile","setSrtFile","timingMode","setTimingMode","autoShiftEnabled","setAutoShiftEnabled","previewChanges","setPreviewChanges","editingSlideId","setEditingSlideId","hideTimeoutRef","audioRef","fileInputRef","imageInputRef","srtInputRef","slideshowRef","handleAudioUpload","event","file","target","files","type","startsWith","url","URL","createObjectURL","value","handleImagesUpload","Array","from","length","imageUrls","forEach","push","name","createDefaultSlides","handleSRTUpload","endsWith","reader","FileReader","onload","e","srtText","result","parsedSlides","parseSRT","alert","readAsText","imageCount","defaultSlides","i","id","Date","now","text","startTime","endTime","imageIndex","blocks","trim","split","block","index","lines","timeLine","textLines","slice","timeMatch","match","startH","startM","startS","startMs","endH","endM","endS","endMs","parseInt","join","Math","min","handleLoadedMetadata","current","handleTimeUpdate","handlePlayPause","pause","play","error","console","handleVolumeChange","newVolume","parseFloat","handleSeek","seekTime","formatSeconds","seconds","toFixed","autoShiftSubsequentSlides","changedSlideId","newEndTime","oldEndTime","timeDifference","changedSlideIndex","findIndex","slide","MIN_GAP","MIN_DURATION","nextSlide","updatedSlides","map","newStartTime","prevSlide","filter","updateSlideTime","slideId","field","isNaN","prevSlides","find","shiftedSlides","affectedSlides","s","shiftedSlide","adjustTime","adjustment","newTime","affectedSlide","applyPreviewChanges","cancelPreviewChanges","handleMouseMove","clearTimeout","setTimeout","handleMouseLeave","toggleFullscreen","document","fullscreenElement","requestFullscreen","err","exitFullscreen","handleFullscreenChange","addEventListener","removeEventListener","handleEscKey","key","goToNextSlide","goToPreviousSlide","activeSlide","addSlideAtCurrentTime","newSlide","sort","a","b","deleteSlide","exportToSRT","srtContent","formatSRTTime","blob","Blob","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","hours","floor","minutes","secs","ms","toString","padStart","formatTime","time","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","onClick","_fileInputRef$current","size","multiple","_imageInputRef$curren","_srtInputRef$current","style","cursor","onMouseMove","onMouseLeave","src","alt","title","disabled","onLoadedMetadata","onTimeUpdate","onEnded","max","step","checked","placeholder","rows","left","width","_c","$RefreshReg$"],"sources":["C:/Users/Smith/Documents/slideshow-music-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight, Pencil, Check } from 'lucide-react';\nimport './App.css';\n\nconst AdvancedSlideshow = () => {\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual');\n  const [autoShiftEnabled, setAutoShiftEnabled] = useState(true);\n  const [previewChanges, setPreviewChanges] = useState(null);\n  const [editingSlideId, setEditingSlideId] = useState(null);\n  \n  const hideTimeoutRef = useRef(null);\n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Handle audio file upload\n  const handleAudioUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    \n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({ url, name: file.name });\n      }\n    });\n    \n    setImages(imageUrls);\n    setCurrentSlide(0);\n    \n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    \n    event.target.value = '';\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const srtText = e.target.result;\n        const parsedSlides = parseSRT(srtText);\n        \n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = (imageCount) => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10,\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Parse SRT file\n  const parseSRT = (srtText) => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n        \n        const timeMatch = timeLine.match(/^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/);\n        \n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          \n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n          \n          const text = textLines.join('\\n').trim();\n          \n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n\n    return parsedSlides;\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const handleSeek = (e) => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = (e.target.value / 100) * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Format seconds to display string\n  const formatSeconds = (seconds) => {\n    return `${seconds.toFixed(1)}s`;\n  };\n\n  // Auto-shift logic\n  const autoShiftSubsequentSlides = (changedSlideId, newEndTime, oldEndTime) => {\n    const timeDifference = newEndTime - oldEndTime;\n    const changedSlideIndex = slides.findIndex(slide => slide.id === changedSlideId);\n    \n    // Validasi minimum gap dan durasi\n    const MIN_GAP = 0.1;\n    const MIN_DURATION = 0.1;\n    \n    // Validasi slide yang diubah\n    const currentSlide = slides[changedSlideIndex];\n    if (newEndTime <= currentSlide.startTime) {\n      return null; // Waktu akhir harus lebih besar dari waktu awal\n    }\n    \n    // Validasi gap dengan slide berikutnya\n    const nextSlide = slides[changedSlideIndex + 1];\n    if (nextSlide && (newEndTime + MIN_GAP) > nextSlide.startTime) {\n      return null; // Gap terlalu kecil\n    }\n\n    const updatedSlides = slides.map((slide, index) => {\n      if (index > changedSlideIndex) {\n        const newStartTime = slide.startTime + timeDifference;\n        const newEndTime = slide.endTime + timeDifference;\n        \n        // Validasi durasi minimum\n        if (newEndTime - newStartTime < MIN_DURATION) {\n          return null; // Durasi terlalu pendek\n        }\n        \n        // Validasi gap dengan slide sebelumnya\n        const prevSlide = index > 0 ? updatedSlides[index - 1] : null;\n        if (prevSlide && (newStartTime - prevSlide.endTime) < MIN_GAP) {\n          return null; // Gap terlalu kecil\n        }\n        \n        return {\n          ...slide,\n          startTime: newStartTime,\n          endTime: newEndTime\n        };\n      }\n      return slide;\n    });\n\n    // Filter out any null values (invalid timings)\n    return updatedSlides.filter(slide => slide !== null);\n  };\n\n  // Update slide time with seconds\n  const updateSlideTime = (slideId, field, value) => {\n    const seconds = parseFloat(value);\n    if (isNaN(seconds) || seconds < 0) return;\n\n    setSlides(prevSlides => {\n      const currentSlide = prevSlides.find(slide => slide.id === slideId);\n      if (!currentSlide) return prevSlides;\n\n      if (field === 'text') {\n        return prevSlides.map(slide => \n          slide.id === slideId ? { ...slide, text: value } : slide\n        );\n      }\n\n      // Validasi waktu\n      if (field === 'startTime') {\n        if (seconds >= currentSlide.endTime) return prevSlides; // Waktu awal harus lebih kecil dari waktu akhir\n      }\n      if (field === 'endTime') {\n        if (seconds <= currentSlide.startTime) return prevSlides; // Waktu akhir harus lebih besar dari waktu awal\n      }\n\n      if (field === 'endTime' && autoShiftEnabled) {\n        const shiftedSlides = autoShiftSubsequentSlides(slideId, seconds, currentSlide.endTime);\n        if (shiftedSlides) {\n          const affectedSlides = shiftedSlides.filter((s, i) => i > prevSlides.findIndex(slide => slide.id === slideId));\n          setPreviewChanges({\n            changedSlideId: slideId,\n            newEndTime: seconds,\n            affectedSlides\n          });\n          \n          return prevSlides.map(slide => {\n            if (slide.id === slideId) {\n              return { ...slide, endTime: seconds };\n            }\n            const shiftedSlide = shiftedSlides.find(s => s.id === slide.id);\n            return shiftedSlide || slide;\n          });\n        }\n        return prevSlides;\n      }\n\n      return prevSlides.map(slide => \n        slide.id === slideId ? { ...slide, [field]: seconds } : slide\n      );\n    });\n  };\n\n  // Quick time adjustment\n  const adjustTime = (slideId, field, adjustment) => {\n    setSlides(prevSlides => {\n      const updatedSlides = prevSlides.map(slide => {\n        if (slide.id === slideId) {\n          const newTime = slide[field] + adjustment;\n          if (newTime < 0) return slide;\n          \n          if (autoShiftEnabled && field === 'endTime') {\n            const shiftedSlides = autoShiftSubsequentSlides(slideId, newTime, slide.endTime);\n            if (shiftedSlides) {\n              setPreviewChanges({\n                changedSlideId: slideId,\n                newEndTime: newTime,\n                affectedSlides: shiftedSlides.filter((s, i) => i > prevSlides.findIndex(slide => slide.id === slideId))\n              });\n              return { ...slide, [field]: newTime };\n            }\n            return slide;\n          }\n          \n          return { ...slide, [field]: newTime };\n        }\n        return slide;\n      });\n\n      // Apply auto-shift changes if preview exists\n      if (previewChanges && previewChanges.changedSlideId === slideId) {\n        return updatedSlides.map(slide => {\n          const affectedSlide = previewChanges.affectedSlides.find(s => s.id === slide.id);\n          return affectedSlide || slide;\n        });\n      }\n\n      return updatedSlides;\n    });\n  };\n\n  // Apply preview changes\n  const applyPreviewChanges = () => {\n    if (previewChanges) {\n      setSlides(prevSlides => \n        prevSlides.map(slide => {\n          const affectedSlide = previewChanges.affectedSlides.find(s => s.id === slide.id);\n          return affectedSlide || slide;\n        })\n      );\n      setPreviewChanges(null);\n    }\n  };\n\n  // Cancel preview changes\n  const cancelPreviewChanges = () => {\n    setPreviewChanges(null);\n  };\n\n  // Auto-hide controls handler\n  const handleMouseMove = () => {\n    setControlsVisible(true);\n    \n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n    \n    hideTimeoutRef.current = setTimeout(() => {\n      setControlsVisible(false);\n    }, 2000);\n  };\n\n  const handleMouseLeave = () => {\n    setControlsVisible(false);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Reset controls visibility when exiting fullscreen\n  useEffect(() => {\n    if (!isFullscreen) {\n      setControlsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    }\n  }, [isFullscreen]);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      \n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    \n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = (slideId) => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      \n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    \n    const blob = new Blob([srtContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor((seconds % 1) * 1000);\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  const formatTime = (time) => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className={`app-container ${isFullscreen ? 'fullscreen' : ''}`}>\n      <div className=\"app-content\">\n        {!isFullscreen && (\n          <>\n            <h1 className=\"app-title\">\n              Advanced Slideshow with Custom Timing\n            </h1>\n            \n            {/* Upload Section */}\n            <div className=\"upload-section\">\n              <div className=\"upload-grid\">\n                <div>\n                  <label className=\"upload-label\">\n                    Upload Audio File\n                  </label>\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    onChange={handleAudioUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-button audio-button\"\n                  >\n                    <Upload size={20} />\n                    Choose Audio\n                  </button>\n                </div>\n                \n                <div>\n                  <label className=\"upload-label\">\n                    Upload Images\n                  </label>\n                  <input\n                    ref={imageInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImagesUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => imageInputRef.current?.click()}\n                    className=\"upload-button image-button\"\n                  >\n                    <Upload size={20} />\n                    Images ({images.length})\n                  </button>\n                </div>\n\n                <div>\n                  <label className=\"upload-label\">\n                    Upload SRT File (Optional)\n                  </label>\n                  <input\n                    ref={srtInputRef}\n                    type=\"file\"\n                    accept=\".srt\"\n                    onChange={handleSRTUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => srtInputRef.current?.click()}\n                    className=\"upload-button srt-button\"\n                  >\n                    <FileText size={20} />\n                    SRT Timing\n                  </button>\n                </div>\n              </div>\n\n              {/* Timing Mode Indicator */}\n              <div className=\"timing-mode\">\n                <div className={`mode-indicator ${timingMode === 'manual' ? 'active' : ''}`}>\n                  Manual Timing\n                </div>\n                <div className={`mode-indicator ${timingMode === 'srt' ? 'active' : ''}`}>\n                  SRT Timing {srtFile && `(${srtFile})`}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className={`main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`}>\n          {/* Slideshow Display */}\n          <div \n            className={`slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`}\n            style={{ cursor: controlsVisible ? 'default' : 'none' }}\n            ref={slideshowRef}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n          >\n            <div className=\"slideshow-display\">\n              {images.length > 0 && slides.length > 0 ? (\n                <div className=\"slide-content\" key={currentSlide}>\n                  <img\n                    src={images[slides[currentSlide]?.imageIndex || 0]?.url}\n                    alt={`Slide ${currentSlide + 1}`}\n                    className={`slide-image ${isFullscreen ? 'fullscreen-image' : ''}`}\n                  />\n                  <div className=\"slide-text-container\">\n                    <p className=\"slide-text\">\n                      {slides[currentSlide]?.text || ''}\n                    </p>\n                  </div>\n                  <div className={`slide-counter ${controlsVisible ? 'show' : 'hide'}`}>\n                    {currentSlide + 1} / {slides.length}\n                  </div>\n                  <div className={`time-counter ${controlsVisible ? 'show' : 'hide'}`}>\n                    {formatTime(currentTime)} / {formatTime(duration)}\n                  </div>\n                  \n                  {/* Fullscreen Controls */}\n                  <button\n                    onClick={toggleFullscreen}\n                    className={`fullscreen-button ${controlsVisible ? 'show' : 'hide'}`}\n                    title={isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\n                  >\n                    {isFullscreen ? <Minimize2 size={24} /> : <Maximize2 size={24} />}\n                  </button>\n\n                  {/* Navigation Controls */}\n                  {isFullscreen && (\n                    <>\n                      <button\n                        onClick={goToPreviousSlide}\n                        className={`nav-button prev-button ${controlsVisible ? 'show' : 'hide'}`}\n                        disabled={currentSlide === 0}\n                      >\n                        <ChevronLeft size={32} />\n                      </button>\n                      <button\n                        onClick={goToNextSlide}\n                        className={`nav-button next-button ${controlsVisible ? 'show' : 'hide'}`}\n                        disabled={currentSlide === slides.length - 1}\n                      >\n                        <ChevronRight size={32} />\n                      </button>\n                    </>\n                  )}\n                </div>\n              ) : (\n                <div className=\"empty-slideshow\">\n                  <div className=\"empty-content\">\n                    <Upload size={48} className=\"empty-icon\" />\n                    <p>Upload audio, images, and set timing</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Audio Controls */}\n            {audioFile && (\n              <div className={`audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''} ${controlsVisible ? 'show' : 'hide'}`}>\n                <audio\n                  ref={audioRef}\n                  src={audioFile}\n                  onLoadedMetadata={handleLoadedMetadata}\n                  onTimeUpdate={handleTimeUpdate}\n                  onEnded={() => setIsPlaying(false)}\n                  className=\"hidden-audio\"\n                />\n                \n                <div className=\"audio-controls-grid\">\n                  <button\n                    onClick={handlePlayPause}\n                    className=\"play-button\"\n                  >\n                    {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                  </button>\n                  \n                  <div className=\"seek-container\">\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={duration ? (currentTime / duration) * 100 : 0}\n                      onChange={handleSeek}\n                      className=\"seek-slider\"\n                    />\n                  </div>\n                  \n                  <div className=\"volume-control\">\n                    <Volume2 size={20} className=\"volume-icon\" />\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={volume}\n                      onChange={handleVolumeChange}\n                      className=\"volume-slider\"\n                    />\n                  </div>\n                </div>\n                \n                {!isFullscreen && (\n                  <button\n                    onClick={addSlideAtCurrentTime}\n                    disabled={!audioFile}\n                    className=\"add-slide-button\"\n                  >\n                    <Plus size={16} />\n                    Add Slide at {formatTime(currentTime)}\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Timing Editor */}\n          {!isFullscreen && (\n            <div className=\"timing-editor\">\n              <div className=\"editor-header\">\n                <div className=\"editor-title-section\">\n                  <h3 className=\"editor-title\">Timing Editor</h3>\n                  <div className=\"auto-shift-toggle\">\n                    <label className=\"toggle-label\">\n                      <input\n                        type=\"checkbox\"\n                        checked={autoShiftEnabled}\n                        onChange={(e) => setAutoShiftEnabled(e.target.checked)}\n                      />\n                      <span className=\"toggle-text\">Auto-Shift</span>\n                      <span className={`toggle-status ${autoShiftEnabled ? 'enabled' : 'disabled'}`}>\n                        {autoShiftEnabled ? 'ON' : 'OFF'}\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"editor-actions\">\n                  <button\n                    onClick={() => setSlides([])}\n                    disabled={slides.length === 0}\n                    className=\"clear-button\"\n                  >\n                    Clear All\n                  </button>\n                  <button\n                    onClick={exportToSRT}\n                    disabled={slides.length === 0}\n                    className=\"export-button\"\n                  >\n                    <Download size={14} />\n                    Export SRT\n                  </button>\n                </div>\n              </div>\n\n              {/* Preview Changes Panel */}\n              {previewChanges && (\n                <div className=\"preview-panel\">\n                  <div className=\"preview-header\">\n                    <span className=\"preview-warning\">\n                      Will shift {previewChanges.affectedSlides.length} slides\n                    </span>\n                    <div className=\"preview-actions\">\n                      <button onClick={applyPreviewChanges} className=\"apply-button\">\n                        Apply Changes\n                      </button>\n                      <button onClick={cancelPreviewChanges} className=\"cancel-button\">\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"preview-timeline\">\n                    {previewChanges.affectedSlides.slice(0, 3).map((slide, index) => (\n                      <div key={slide.id} className=\"preview-item\">\n                        <span className=\"preview-text\">{slide.text}</span>\n                        <span className=\"preview-time\">\n                          {formatSeconds(slide.startTime)} → {formatSeconds(slide.endTime)}\n                        </span>\n                      </div>\n                    ))}\n                    {previewChanges.affectedSlides.length > 3 && (\n                      <div className=\"preview-more\">\n                        +{previewChanges.affectedSlides.length - 3} more slides\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Slides Timeline */}\n              <div className=\"slides-timeline\">\n                {slides.map((slide, index) => (\n                  <div\n                    key={slide.id}\n                    className={`slide-item ${index === currentSlide ? 'active' : ''} ${editingSlideId === slide.id ? 'editing' : ''}`}\n                  >\n                    <div className=\"slide-grid\">\n                      <div className=\"slide-text-input\">\n                        <textarea\n                          value={slide.text}\n                          onChange={(e) => updateSlideTime(slide.id, 'text', e.target.value)}\n                          className=\"timing-input text-input\"\n                          placeholder=\"Slide text\"\n                          rows={2}\n                        />\n                      </div>\n                      <div className=\"slide-time-display\">\n                        {editingSlideId === slide.id ? (\n                          <div className=\"time-editor\">\n                            <div className=\"time-inputs\">\n                              <div className=\"time-input-group\">\n                                <label>Start</label>\n                                <input\n                                  type=\"number\"\n                                  value={slide.startTime}\n                                  onChange={(e) => updateSlideTime(slide.id, 'startTime', e.target.value)}\n                                  step=\"0.1\"\n                                  min=\"0\"\n                                  className=\"timing-input\"\n                                />\n                                <div className=\"quick-adjust\">\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', -1)}>-1s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', -0.5)}>-0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', 0.5)}>+0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', 1)}>+1s</button>\n                                </div>\n                              </div>\n                              <div className=\"time-input-group\">\n                                <label>End</label>\n                                <input\n                                  type=\"number\"\n                                  value={slide.endTime}\n                                  onChange={(e) => updateSlideTime(slide.id, 'endTime', e.target.value)}\n                                  step=\"0.1\"\n                                  min=\"0\"\n                                  className={`timing-input ${autoShiftEnabled ? 'auto-shift-enabled' : ''}`}\n                                />\n                                <div className=\"quick-adjust\">\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', -1)}>-1s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', -0.5)}>-0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', 0.5)}>+0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', 1)}>+1s</button>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"timeline-bar\">\n                              <div className=\"timeline-progress\" style={{\n                                left: `${(slide.startTime / duration) * 100}%`,\n                                width: `${((slide.endTime - slide.startTime) / duration) * 100}%`\n                              }} />\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"time-display\">\n                            <span>{formatSeconds(slide.startTime)} → {formatSeconds(slide.endTime)}</span>\n                            <button\n                              onClick={() => setEditingSlideId(slide.id)}\n                              className=\"edit-button\"\n                            >\n                              <Pencil size={14} />\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"slide-actions\">\n                        {editingSlideId === slide.id ? (\n                          <button\n                            onClick={() => setEditingSlideId(null)}\n                            className=\"check-button\"\n                          >\n                            <Check size={14} />\n                          </button>\n                        ) : (\n                          <button\n                            onClick={() => deleteSlide(slide.id)}\n                            className=\"delete-button\"\n                          >\n                            <Trash2 size={14} />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                \n                {slides.length === 0 && (\n                  <div className=\"empty-timeline\">\n                    <Clock size={32} className=\"empty-icon\" />\n                    <p>No slides added yet</p>\n                    <p className=\"empty-subtext\">Upload images and add timing, or use SRT file</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Instructions - Hidden in fullscreen */}\n        {!isFullscreen && (\n          <div className=\"instructions-section\">\n            <div className=\"instructions-grid\">\n              <div>\n                <h3 className=\"instructions-title\">Manual Timing:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Upload audio and images</li>\n                  <li>Play audio and click \"Add Slide at [time]\" for each slide</li>\n                  <li>Edit slide text and timing in the editor</li>\n                  <li>Export to SRT if needed</li>\n                </ol>\n              </div>\n              <div>\n                <h3 className=\"instructions-title\">SRT File Method:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Create or download SRT subtitle file</li>\n                  <li>Upload audio and images</li>\n                  <li>Upload SRT file - timing will be applied automatically</li>\n                  <li>Fine-tune timing if needed</li>\n                </ol>\n              </div>\n            </div>\n            \n            <div className=\"srt-example\">\n              <h4 className=\"example-title\">SRT Format Example:</h4>\n              <pre className=\"example-code\">\n{`1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`}\n              </pre>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSlideshow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,KAAK,QAAQ,cAAc;AACpK,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,OAAA,EAAAC,oBAAA,EAAAC,qBAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC,GAAG,CAAC;EACzC,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC6C,MAAM,EAAEC,SAAS,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+C,OAAO,EAAEC,UAAU,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiD,UAAU,EAAEC,aAAa,CAAC,GAAGlD,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACmD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACqD,cAAc,EAAEC,iBAAiB,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACuD,cAAc,EAAEC,iBAAiB,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMyD,cAAc,GAAGxD,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMyD,QAAQ,GAAGzD,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM0D,YAAY,GAAG1D,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM2D,aAAa,GAAG3D,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM4D,WAAW,GAAG5D,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM6D,YAAY,GAAG7D,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAM8D,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC1C,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;MACrCrC,YAAY,CAAC0C,GAAG,CAAC;MACjBhC,cAAc,CAAC,CAAC,CAAC;MACjBN,eAAe,CAAC,CAAC,CAAC;MAClBE,YAAY,CAAC,KAAK,CAAC;IACrB;IACA8B,KAAK,CAACE,MAAM,CAACO,KAAK,GAAG,EAAE;EACzB,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIV,KAAK,IAAK;IACpC,MAAMG,KAAK,GAAGQ,KAAK,CAACC,IAAI,CAACZ,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IAC5C,IAAIA,KAAK,CAACU,MAAM,KAAK,CAAC,EAAE;IAExB,MAAMC,SAAS,GAAG,EAAE;IACpBX,KAAK,CAACY,OAAO,CAACd,IAAI,IAAI;MACpB,IAAIA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;QAClC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;QACrCa,SAAS,CAACE,IAAI,CAAC;UAAEV,GAAG;UAAEW,IAAI,EAAEhB,IAAI,CAACgB;QAAK,CAAC,CAAC;MAC1C;IACF,CAAC,CAAC;IAEFnD,SAAS,CAACgD,SAAS,CAAC;IACpB9C,eAAe,CAAC,CAAC,CAAC;;IAElB;IACA,IAAIa,MAAM,CAACgC,MAAM,KAAK,CAAC,IAAI5B,UAAU,KAAK,QAAQ,EAAE;MAClDiC,mBAAmB,CAACJ,SAAS,CAACD,MAAM,CAAC;IACvC;IAEAb,KAAK,CAACE,MAAM,CAACO,KAAK,GAAG,EAAE;EACzB,CAAC;;EAED;EACA,MAAMU,eAAe,GAAInB,KAAK,IAAK;IACjC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACgB,IAAI,CAACG,QAAQ,CAAC,MAAM,CAAC,EAAE;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMC,OAAO,GAAGD,CAAC,CAACtB,MAAM,CAACwB,MAAM;QAC/B,MAAMC,YAAY,GAAGC,QAAQ,CAACH,OAAO,CAAC;QAEtC,IAAIE,YAAY,CAACd,MAAM,GAAG,CAAC,EAAE;UAC3B/B,SAAS,CAAC6C,YAAY,CAAC;UACvB3C,UAAU,CAACiB,IAAI,CAACgB,IAAI,CAAC;UACrB/B,aAAa,CAAC,KAAK,CAAC;UACpBlB,eAAe,CAAC,CAAC,CAAC;QACpB,CAAC,MAAM;UACL6D,KAAK,CAAC,oDAAoD,CAAC;QAC7D;MACF,CAAC;MACDR,MAAM,CAACS,UAAU,CAAC7B,IAAI,CAAC;IACzB,CAAC,MAAM;MACL4B,KAAK,CAAC,iCAAiC,CAAC;IAC1C;IACA7B,KAAK,CAACE,MAAM,CAACO,KAAK,GAAG,EAAE;EACzB,CAAC;;EAED;EACA,MAAMS,mBAAmB,GAAIa,UAAU,IAAK;IAC1C,MAAMC,aAAa,GAAG,EAAE;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;MACnCD,aAAa,CAAChB,IAAI,CAAC;QACjBkB,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,CAAC;QAClBI,IAAI,EAAE,SAASJ,CAAC,GAAG,CAAC,EAAE;QACtBK,SAAS,EAAEL,CAAC,GAAG,EAAE;QACjBM,OAAO,EAAE,CAACN,CAAC,GAAG,CAAC,IAAI,EAAE;QACrBO,UAAU,EAAEP;MACd,CAAC,CAAC;IACJ;IACAnD,SAAS,CAACkD,aAAa,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMJ,QAAQ,GAAIH,OAAO,IAAK;IAC5B,MAAMgB,MAAM,GAAGhB,OAAO,CAACiB,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;IAC3C,MAAMhB,YAAY,GAAG,EAAE;IAEvBc,MAAM,CAAC1B,OAAO,CAAC,CAAC6B,KAAK,EAAEC,KAAK,KAAK;MAC/B,MAAMC,KAAK,GAAGF,KAAK,CAACD,KAAK,CAAC,IAAI,CAAC;MAC/B,IAAIG,KAAK,CAACjC,MAAM,IAAI,CAAC,EAAE;QACrB,MAAMkC,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC;QACzB,MAAME,SAAS,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;QAEhC,MAAMC,SAAS,GAAGH,QAAQ,CAACI,KAAK,CAAC,2EAA2E,CAAC;QAE7G,IAAID,SAAS,EAAE;UACb,MAAM,GAAGE,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC,GAAGT,SAAS;UAE9E,MAAMZ,SAAS,GAAGsB,QAAQ,CAACR,MAAM,CAAC,GAAG,IAAI,GAAGQ,QAAQ,CAACP,MAAM,CAAC,GAAG,EAAE,GAAGO,QAAQ,CAACN,MAAM,CAAC,GAAGM,QAAQ,CAACL,OAAO,CAAC,GAAG,IAAI;UAC/G,MAAMhB,OAAO,GAAGqB,QAAQ,CAACJ,IAAI,CAAC,GAAG,IAAI,GAAGI,QAAQ,CAACH,IAAI,CAAC,GAAG,EAAE,GAAGG,QAAQ,CAACF,IAAI,CAAC,GAAGE,QAAQ,CAACD,KAAK,CAAC,GAAG,IAAI;UAErG,MAAMtB,IAAI,GAAGW,SAAS,CAACa,IAAI,CAAC,IAAI,CAAC,CAACnB,IAAI,CAAC,CAAC;UAExCf,YAAY,CAACX,IAAI,CAAC;YAChBkB,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGS,KAAK;YACtBR,IAAI,EAAEA,IAAI;YACVC,SAAS,EAAEA,SAAS;YACpBC,OAAO,EAAEA,OAAO;YAChBC,UAAU,EAAEsB,IAAI,CAACC,GAAG,CAAClB,KAAK,EAAEhF,MAAM,CAACgD,MAAM,GAAG,CAAC;UAC/C,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;IAEF,OAAOc,YAAY;EACrB,CAAC;;EAED;EACA,MAAMqC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAItE,QAAQ,CAACuE,OAAO,EAAE;MACpB7F,WAAW,CAACsB,QAAQ,CAACuE,OAAO,CAAC9F,QAAQ,CAAC;IACxC;EACF,CAAC;EAED,MAAM+F,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIxE,QAAQ,CAACuE,OAAO,EAAE;MACpB3F,cAAc,CAACoB,QAAQ,CAACuE,OAAO,CAAC5F,WAAW,CAAC;IAC9C;EACF,CAAC;EAED,MAAM8F,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIzE,QAAQ,CAACuE,OAAO,EAAE;MACpB,IAAI;QACF,IAAIhG,SAAS,EAAE;UACbyB,QAAQ,CAACuE,OAAO,CAACG,KAAK,CAAC,CAAC;UACxBlG,YAAY,CAAC,KAAK,CAAC;QACrB,CAAC,MAAM;UACL,MAAMwB,QAAQ,CAACuE,OAAO,CAACI,IAAI,CAAC,CAAC;UAC7BnG,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,OAAOoG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnCpG,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC;EAED,MAAMsG,kBAAkB,GAAIhD,CAAC,IAAK;IAChC,MAAMiD,SAAS,GAAGC,UAAU,CAAClD,CAAC,CAACtB,MAAM,CAACO,KAAK,CAAC;IAC5CjC,SAAS,CAACiG,SAAS,CAAC;IACpB,IAAI/E,QAAQ,CAACuE,OAAO,EAAE;MACpBvE,QAAQ,CAACuE,OAAO,CAAC1F,MAAM,GAAGkG,SAAS;IACrC;EACF,CAAC;EAED,MAAME,UAAU,GAAInD,CAAC,IAAK;IACxB,IAAI9B,QAAQ,CAACuE,OAAO,IAAI9F,QAAQ,GAAG,CAAC,EAAE;MACpC,MAAMyG,QAAQ,GAAIpD,CAAC,CAACtB,MAAM,CAACO,KAAK,GAAG,GAAG,GAAItC,QAAQ;MAClDuB,QAAQ,CAACuE,OAAO,CAAC5F,WAAW,GAAGuG,QAAQ;MACvCtG,cAAc,CAACsG,QAAQ,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIC,OAAO,IAAK;IACjC,OAAO,GAAGA,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG;EACjC,CAAC;;EAED;EACA,MAAMC,yBAAyB,GAAGA,CAACC,cAAc,EAAEC,UAAU,EAAEC,UAAU,KAAK;IAC5E,MAAMC,cAAc,GAAGF,UAAU,GAAGC,UAAU;IAC9C,MAAME,iBAAiB,GAAGxG,MAAM,CAACyG,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACrD,EAAE,KAAK+C,cAAc,CAAC;;IAEhF;IACA,MAAMO,OAAO,GAAG,GAAG;IACnB,MAAMC,YAAY,GAAG,GAAG;;IAExB;IACA,MAAM1H,YAAY,GAAGc,MAAM,CAACwG,iBAAiB,CAAC;IAC9C,IAAIH,UAAU,IAAInH,YAAY,CAACuE,SAAS,EAAE;MACxC,OAAO,IAAI,CAAC,CAAC;IACf;;IAEA;IACA,MAAMoD,SAAS,GAAG7G,MAAM,CAACwG,iBAAiB,GAAG,CAAC,CAAC;IAC/C,IAAIK,SAAS,IAAKR,UAAU,GAAGM,OAAO,GAAIE,SAAS,CAACpD,SAAS,EAAE;MAC7D,OAAO,IAAI,CAAC,CAAC;IACf;IAEA,MAAMqD,aAAa,GAAG9G,MAAM,CAAC+G,GAAG,CAAC,CAACL,KAAK,EAAE1C,KAAK,KAAK;MACjD,IAAIA,KAAK,GAAGwC,iBAAiB,EAAE;QAC7B,MAAMQ,YAAY,GAAGN,KAAK,CAACjD,SAAS,GAAG8C,cAAc;QACrD,MAAMF,UAAU,GAAGK,KAAK,CAAChD,OAAO,GAAG6C,cAAc;;QAEjD;QACA,IAAIF,UAAU,GAAGW,YAAY,GAAGJ,YAAY,EAAE;UAC5C,OAAO,IAAI,CAAC,CAAC;QACf;;QAEA;QACA,MAAMK,SAAS,GAAGjD,KAAK,GAAG,CAAC,GAAG8C,aAAa,CAAC9C,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;QAC7D,IAAIiD,SAAS,IAAKD,YAAY,GAAGC,SAAS,CAACvD,OAAO,GAAIiD,OAAO,EAAE;UAC7D,OAAO,IAAI,CAAC,CAAC;QACf;QAEA,OAAO;UACL,GAAGD,KAAK;UACRjD,SAAS,EAAEuD,YAAY;UACvBtD,OAAO,EAAE2C;QACX,CAAC;MACH;MACA,OAAOK,KAAK;IACd,CAAC,CAAC;;IAEF;IACA,OAAOI,aAAa,CAACI,MAAM,CAACR,KAAK,IAAIA,KAAK,KAAK,IAAI,CAAC;EACtD,CAAC;;EAED;EACA,MAAMS,eAAe,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEzF,KAAK,KAAK;IACjD,MAAMqE,OAAO,GAAGJ,UAAU,CAACjE,KAAK,CAAC;IACjC,IAAI0F,KAAK,CAACrB,OAAO,CAAC,IAAIA,OAAO,GAAG,CAAC,EAAE;IAEnChG,SAAS,CAACsH,UAAU,IAAI;MACtB,MAAMrI,YAAY,GAAGqI,UAAU,CAACC,IAAI,CAACd,KAAK,IAAIA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,CAAC;MACnE,IAAI,CAAClI,YAAY,EAAE,OAAOqI,UAAU;MAEpC,IAAIF,KAAK,KAAK,MAAM,EAAE;QACpB,OAAOE,UAAU,CAACR,GAAG,CAACL,KAAK,IACzBA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,GAAG;UAAE,GAAGV,KAAK;UAAElD,IAAI,EAAE5B;QAAM,CAAC,GAAG8E,KACrD,CAAC;MACH;;MAEA;MACA,IAAIW,KAAK,KAAK,WAAW,EAAE;QACzB,IAAIpB,OAAO,IAAI/G,YAAY,CAACwE,OAAO,EAAE,OAAO6D,UAAU,CAAC,CAAC;MAC1D;MACA,IAAIF,KAAK,KAAK,SAAS,EAAE;QACvB,IAAIpB,OAAO,IAAI/G,YAAY,CAACuE,SAAS,EAAE,OAAO8D,UAAU,CAAC,CAAC;MAC5D;MAEA,IAAIF,KAAK,KAAK,SAAS,IAAI/G,gBAAgB,EAAE;QAC3C,MAAMmH,aAAa,GAAGtB,yBAAyB,CAACiB,OAAO,EAAEnB,OAAO,EAAE/G,YAAY,CAACwE,OAAO,CAAC;QACvF,IAAI+D,aAAa,EAAE;UACjB,MAAMC,cAAc,GAAGD,aAAa,CAACP,MAAM,CAAC,CAACS,CAAC,EAAEvE,CAAC,KAAKA,CAAC,GAAGmE,UAAU,CAACd,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,CAAC,CAAC;UAC9G3G,iBAAiB,CAAC;YAChB2F,cAAc,EAAEgB,OAAO;YACvBf,UAAU,EAAEJ,OAAO;YACnByB;UACF,CAAC,CAAC;UAEF,OAAOH,UAAU,CAACR,GAAG,CAACL,KAAK,IAAI;YAC7B,IAAIA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,EAAE;cACxB,OAAO;gBAAE,GAAGV,KAAK;gBAAEhD,OAAO,EAAEuC;cAAQ,CAAC;YACvC;YACA,MAAM2B,YAAY,GAAGH,aAAa,CAACD,IAAI,CAACG,CAAC,IAAIA,CAAC,CAACtE,EAAE,KAAKqD,KAAK,CAACrD,EAAE,CAAC;YAC/D,OAAOuE,YAAY,IAAIlB,KAAK;UAC9B,CAAC,CAAC;QACJ;QACA,OAAOa,UAAU;MACnB;MAEA,OAAOA,UAAU,CAACR,GAAG,CAACL,KAAK,IACzBA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,GAAG;QAAE,GAAGV,KAAK;QAAE,CAACW,KAAK,GAAGpB;MAAQ,CAAC,GAAGS,KAC1D,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMmB,UAAU,GAAGA,CAACT,OAAO,EAAEC,KAAK,EAAES,UAAU,KAAK;IACjD7H,SAAS,CAACsH,UAAU,IAAI;MACtB,MAAMT,aAAa,GAAGS,UAAU,CAACR,GAAG,CAACL,KAAK,IAAI;QAC5C,IAAIA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,EAAE;UACxB,MAAMW,OAAO,GAAGrB,KAAK,CAACW,KAAK,CAAC,GAAGS,UAAU;UACzC,IAAIC,OAAO,GAAG,CAAC,EAAE,OAAOrB,KAAK;UAE7B,IAAIpG,gBAAgB,IAAI+G,KAAK,KAAK,SAAS,EAAE;YAC3C,MAAMI,aAAa,GAAGtB,yBAAyB,CAACiB,OAAO,EAAEW,OAAO,EAAErB,KAAK,CAAChD,OAAO,CAAC;YAChF,IAAI+D,aAAa,EAAE;cACjBhH,iBAAiB,CAAC;gBAChB2F,cAAc,EAAEgB,OAAO;gBACvBf,UAAU,EAAE0B,OAAO;gBACnBL,cAAc,EAAED,aAAa,CAACP,MAAM,CAAC,CAACS,CAAC,EAAEvE,CAAC,KAAKA,CAAC,GAAGmE,UAAU,CAACd,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,CAAC;cACxG,CAAC,CAAC;cACF,OAAO;gBAAE,GAAGV,KAAK;gBAAE,CAACW,KAAK,GAAGU;cAAQ,CAAC;YACvC;YACA,OAAOrB,KAAK;UACd;UAEA,OAAO;YAAE,GAAGA,KAAK;YAAE,CAACW,KAAK,GAAGU;UAAQ,CAAC;QACvC;QACA,OAAOrB,KAAK;MACd,CAAC,CAAC;;MAEF;MACA,IAAIlG,cAAc,IAAIA,cAAc,CAAC4F,cAAc,KAAKgB,OAAO,EAAE;QAC/D,OAAON,aAAa,CAACC,GAAG,CAACL,KAAK,IAAI;UAChC,MAAMsB,aAAa,GAAGxH,cAAc,CAACkH,cAAc,CAACF,IAAI,CAACG,CAAC,IAAIA,CAAC,CAACtE,EAAE,KAAKqD,KAAK,CAACrD,EAAE,CAAC;UAChF,OAAO2E,aAAa,IAAItB,KAAK;QAC/B,CAAC,CAAC;MACJ;MAEA,OAAOI,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMmB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIzH,cAAc,EAAE;MAClBP,SAAS,CAACsH,UAAU,IAClBA,UAAU,CAACR,GAAG,CAACL,KAAK,IAAI;QACtB,MAAMsB,aAAa,GAAGxH,cAAc,CAACkH,cAAc,CAACF,IAAI,CAACG,CAAC,IAAIA,CAAC,CAACtE,EAAE,KAAKqD,KAAK,CAACrD,EAAE,CAAC;QAChF,OAAO2E,aAAa,IAAItB,KAAK;MAC/B,CAAC,CACH,CAAC;MACDjG,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMyH,oBAAoB,GAAGA,CAAA,KAAM;IACjCzH,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAM0H,eAAe,GAAGA,CAAA,KAAM;IAC5BpI,kBAAkB,CAAC,IAAI,CAAC;IAExB,IAAIa,cAAc,CAACwE,OAAO,EAAE;MAC1BgD,YAAY,CAACxH,cAAc,CAACwE,OAAO,CAAC;IACtC;IAEAxE,cAAc,CAACwE,OAAO,GAAGiD,UAAU,CAAC,MAAM;MACxCtI,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMuI,gBAAgB,GAAGA,CAAA,KAAM;IAC7BvI,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAIa,cAAc,CAACwE,OAAO,EAAE;MAC1BgD,YAAY,CAACxH,cAAc,CAACwE,OAAO,CAAC;IACtC;EACF,CAAC;;EAED;EACA/H,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIuD,cAAc,CAACwE,OAAO,EAAE;QAC1BgD,YAAY,CAACxH,cAAc,CAACwE,OAAO,CAAC;MACtC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/H,SAAS,CAAC,MAAM;IACd,IAAI,CAACuC,YAAY,EAAE;MACjBG,kBAAkB,CAAC,IAAI,CAAC;MACxB,IAAIa,cAAc,CAACwE,OAAO,EAAE;QAC1BgD,YAAY,CAACxH,cAAc,CAACwE,OAAO,CAAC;MACtC;IACF;EACF,CAAC,EAAE,CAACxF,YAAY,CAAC,CAAC;;EAElB;EACA,MAAM2I,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACC,QAAQ,CAACC,iBAAiB,EAAE;MAC/B,IAAI;QACF,MAAMxH,YAAY,CAACmE,OAAO,CAACsD,iBAAiB,CAAC,CAAC;QAC9C7I,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,OAAO8I,GAAG,EAAE;QACZjD,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEkD,GAAG,CAAC;MAC9D;IACF,CAAC,MAAM;MACL,IAAI;QACF,MAAMH,QAAQ,CAACI,cAAc,CAAC,CAAC;QAC/B/I,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,CAAC,OAAO8I,GAAG,EAAE;QACZjD,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEkD,GAAG,CAAC;MAC5D;IACF;EACF,CAAC;;EAED;EACAtL,SAAS,CAAC,MAAM;IACd,MAAMwL,sBAAsB,GAAGA,CAAA,KAAM;MACnChJ,eAAe,CAAC,CAAC,CAAC2I,QAAQ,CAACC,iBAAiB,CAAC;IAC/C,CAAC;IAEDD,QAAQ,CAACM,gBAAgB,CAAC,kBAAkB,EAAED,sBAAsB,CAAC;IACrE,OAAO,MAAM;MACXL,QAAQ,CAACO,mBAAmB,CAAC,kBAAkB,EAAEF,sBAAsB,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxL,SAAS,CAAC,MAAM;IACd,MAAM2L,YAAY,GAAI7H,KAAK,IAAK;MAC9B,IAAIA,KAAK,CAAC8H,GAAG,KAAK,QAAQ,IAAIrJ,YAAY,EAAE;QAC1C4I,QAAQ,CAACI,cAAc,CAAC,CAAC;MAC3B;IACF,CAAC;IAEDJ,QAAQ,CAACM,gBAAgB,CAAC,SAAS,EAAEE,YAAY,CAAC;IAClD,OAAO,MAAM;MACXR,QAAQ,CAACO,mBAAmB,CAAC,SAAS,EAAEC,YAAY,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACpJ,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMsJ,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIhK,YAAY,GAAGc,MAAM,CAACgC,MAAM,GAAG,CAAC,EAAE;MACpC7C,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMiK,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIjK,YAAY,GAAG,CAAC,EAAE;MACpBC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;;EAED;EACA7B,SAAS,CAAC,MAAM;IACd,IAAI2C,MAAM,CAACgC,MAAM,GAAG,CAAC,IAAIxC,WAAW,GAAG,CAAC,EAAE;MACxC,IAAI4J,WAAW,GAAG,CAAC;MACnB,KAAK,IAAIhG,CAAC,GAAGpD,MAAM,CAACgC,MAAM,GAAG,CAAC,EAAEoB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3C,IAAI5D,WAAW,IAAIQ,MAAM,CAACoD,CAAC,CAAC,CAACK,SAAS,EAAE;UACtC2F,WAAW,GAAGhG,CAAC;UACf;QACF;MACF;MAEA,IAAIgG,WAAW,KAAKlK,YAAY,EAAE;QAChCC,eAAe,CAACiK,WAAW,CAAC;MAC9B;IACF;EACF,CAAC,EAAE,CAAC5J,WAAW,EAAEQ,MAAM,EAAEd,YAAY,CAAC,CAAC;;EAEvC;EACA,MAAMmK,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,QAAQ,GAAG;MACfjG,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,SAASxD,MAAM,CAACgC,MAAM,GAAG,CAAC,EAAE;MAClCyB,SAAS,EAAEjE,WAAW;MACtBkE,OAAO,EAAElE,WAAW,GAAG,EAAE;MACzBmE,UAAU,EAAEsB,IAAI,CAACC,GAAG,CAAClF,MAAM,CAACgC,MAAM,EAAEhD,MAAM,CAACgD,MAAM,GAAG,CAAC;IACvD,CAAC;IAED,MAAM8E,aAAa,GAAG,CAAC,GAAG9G,MAAM,EAAEsJ,QAAQ,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC/F,SAAS,GAAGgG,CAAC,CAAChG,SAAS,CAAC;IACrFxD,SAAS,CAAC6G,aAAa,CAAC;IACxBzG,aAAa,CAAC,QAAQ,CAAC;EACzB,CAAC;;EAED;EACA,MAAMqJ,WAAW,GAAItC,OAAO,IAAK;IAC/BnH,SAAS,CAACD,MAAM,CAACkH,MAAM,CAACR,KAAK,IAAIA,KAAK,CAACrD,EAAE,KAAK+D,OAAO,CAAC,CAAC;EACzD,CAAC;;EAED;EACA,MAAMuC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,UAAU,GAAG,EAAE;IACnB5J,MAAM,CAACkC,OAAO,CAAC,CAACwE,KAAK,EAAE1C,KAAK,KAAK;MAC/B,MAAMP,SAAS,GAAGoG,aAAa,CAACnD,KAAK,CAACjD,SAAS,CAAC;MAChD,MAAMC,OAAO,GAAGmG,aAAa,CAACnD,KAAK,CAAChD,OAAO,CAAC;MAE5CkG,UAAU,IAAI,GAAG5F,KAAK,GAAG,CAAC,IAAI;MAC9B4F,UAAU,IAAI,GAAGnG,SAAS,QAAQC,OAAO,IAAI;MAC7CkG,UAAU,IAAI,GAAGlD,KAAK,CAAClD,IAAI,MAAM;IACnC,CAAC,CAAC;IAEF,MAAMsG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,UAAU,CAAC,EAAE;MAAErI,IAAI,EAAE;IAAa,CAAC,CAAC;IAC3D,MAAME,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACmI,IAAI,CAAC;IACrC,MAAMN,CAAC,GAAGhB,QAAQ,CAACwB,aAAa,CAAC,GAAG,CAAC;IACrCR,CAAC,CAACS,IAAI,GAAGxI,GAAG;IACZ+H,CAAC,CAACU,QAAQ,GAAG,sBAAsB;IACnC1B,QAAQ,CAAC2B,IAAI,CAACC,WAAW,CAACZ,CAAC,CAAC;IAC5BA,CAAC,CAACa,KAAK,CAAC,CAAC;IACT7B,QAAQ,CAAC2B,IAAI,CAACG,WAAW,CAACd,CAAC,CAAC;IAC5B9H,GAAG,CAAC6I,eAAe,CAAC9I,GAAG,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMoI,aAAa,GAAI5D,OAAO,IAAK;IACjC,MAAMuE,KAAK,GAAGvF,IAAI,CAACwF,KAAK,CAACxE,OAAO,GAAG,IAAI,CAAC;IACxC,MAAMyE,OAAO,GAAGzF,IAAI,CAACwF,KAAK,CAAExE,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAM0E,IAAI,GAAG1F,IAAI,CAACwF,KAAK,CAACxE,OAAO,GAAG,EAAE,CAAC;IACrC,MAAM2E,EAAE,GAAG3F,IAAI,CAACwF,KAAK,CAAExE,OAAO,GAAG,CAAC,GAAI,IAAI,CAAC;IAE3C,OAAO,GAAGuE,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIJ,OAAO,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIH,IAAI,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,EAAE,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAC5J,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAI1D,KAAK,CAAC0D,IAAI,CAAC,EAAE,OAAO,MAAM;IAC9B,MAAMN,OAAO,GAAGzF,IAAI,CAACwF,KAAK,CAACO,IAAI,GAAG,EAAE,CAAC;IACrC,MAAM/E,OAAO,GAAGhB,IAAI,CAACwF,KAAK,CAACO,IAAI,GAAG,EAAE,CAAC;IACrC,OAAO,GAAGN,OAAO,IAAIzE,OAAO,CAAC4E,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAC5D,CAAC;EAED,oBACExM,OAAA;IAAK2M,SAAS,EAAE,iBAAiBrL,YAAY,GAAG,YAAY,GAAG,EAAE,EAAG;IAAAsL,QAAA,eAClE5M,OAAA;MAAK2M,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzB,CAACtL,YAAY,iBACZtB,OAAA,CAAAE,SAAA;QAAA0M,QAAA,gBACE5M,OAAA;UAAI2M,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAE1B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGLhN,OAAA;UAAK2M,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B5M,OAAA;YAAK2M,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B5M,OAAA;cAAA4M,QAAA,gBACE5M,OAAA;gBAAO2M,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAEhC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRhN,OAAA;gBACEiN,GAAG,EAAEzK,YAAa;gBAClBS,IAAI,EAAC,MAAM;gBACXiK,MAAM,EAAC,SAAS;gBAChBC,QAAQ,EAAEvK,iBAAkB;gBAC5B+J,SAAS,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACFhN,OAAA;gBACEoN,OAAO,EAAEA,CAAA;kBAAA,IAAAC,qBAAA;kBAAA,QAAAA,qBAAA,GAAM7K,YAAY,CAACsE,OAAO,cAAAuG,qBAAA,uBAApBA,qBAAA,CAAsBtB,KAAK,CAAC,CAAC;gBAAA,CAAC;gBAC7CY,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,gBAEtC5M,OAAA,CAACd,MAAM;kBAACoO,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAEtB;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAENhN,OAAA;cAAA4M,QAAA,gBACE5M,OAAA;gBAAO2M,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAEhC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRhN,OAAA;gBACEiN,GAAG,EAAExK,aAAc;gBACnBQ,IAAI,EAAC,MAAM;gBACXiK,MAAM,EAAC,SAAS;gBAChBK,QAAQ;gBACRJ,QAAQ,EAAE5J,kBAAmB;gBAC7BoJ,SAAS,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACFhN,OAAA;gBACEoN,OAAO,EAAEA,CAAA;kBAAA,IAAAI,qBAAA;kBAAA,QAAAA,qBAAA,GAAM/K,aAAa,CAACqE,OAAO,cAAA0G,qBAAA,uBAArBA,qBAAA,CAAuBzB,KAAK,CAAC,CAAC;gBAAA,CAAC;gBAC9CY,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,gBAEtC5M,OAAA,CAACd,MAAM;kBAACoO,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,YACZ,EAACtM,MAAM,CAACgD,MAAM,EAAC,GACzB;cAAA;gBAAAmJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAENhN,OAAA;cAAA4M,QAAA,gBACE5M,OAAA;gBAAO2M,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAEhC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRhN,OAAA;gBACEiN,GAAG,EAAEvK,WAAY;gBACjBO,IAAI,EAAC,MAAM;gBACXiK,MAAM,EAAC,MAAM;gBACbC,QAAQ,EAAEnJ,eAAgB;gBAC1B2I,SAAS,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACFhN,OAAA;gBACEoN,OAAO,EAAEA,CAAA;kBAAA,IAAAK,oBAAA;kBAAA,QAAAA,oBAAA,GAAM/K,WAAW,CAACoE,OAAO,cAAA2G,oBAAA,uBAAnBA,oBAAA,CAAqB1B,KAAK,CAAC,CAAC;gBAAA,CAAC;gBAC5CY,SAAS,EAAC,0BAA0B;gBAAAC,QAAA,gBAEpC5M,OAAA,CAACR,QAAQ;kBAAC8N,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,cAExB;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNhN,OAAA;YAAK2M,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B5M,OAAA;cAAK2M,SAAS,EAAE,kBAAkB7K,UAAU,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;cAAA8K,QAAA,EAAC;YAE7E;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNhN,OAAA;cAAK2M,SAAS,EAAE,kBAAkB7K,UAAU,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;cAAA8K,QAAA,GAAC,aAC7D,EAAChL,OAAO,IAAI,IAAIA,OAAO,GAAG;YAAA;cAAAiL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,eACN,CACH,eAEDhN,OAAA;QAAK2M,SAAS,EAAE,aAAarL,YAAY,GAAG,iBAAiB,GAAG,EAAE,EAAG;QAAAsL,QAAA,gBAEnE5M,OAAA;UACE2M,SAAS,EAAE,uBAAuBrL,YAAY,GAAG,sBAAsB,GAAG,EAAE,EAAG;UAC/EoM,KAAK,EAAE;YAAEC,MAAM,EAAEnM,eAAe,GAAG,SAAS,GAAG;UAAO,CAAE;UACxDyL,GAAG,EAAEtK,YAAa;UAClBiL,WAAW,EAAE/D,eAAgB;UAC7BgE,YAAY,EAAE7D,gBAAiB;UAAA4C,QAAA,gBAE/B5M,OAAA;YAAK2M,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/BlM,MAAM,CAACgD,MAAM,GAAG,CAAC,IAAIhC,MAAM,CAACgC,MAAM,GAAG,CAAC,gBACrC1D,OAAA;cAAK2M,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5B5M,OAAA;gBACE8N,GAAG,GAAAzN,OAAA,GAAEK,MAAM,CAAC,EAAAJ,oBAAA,GAAAoB,MAAM,CAACd,YAAY,CAAC,cAAAN,oBAAA,uBAApBA,oBAAA,CAAsB+E,UAAU,KAAI,CAAC,CAAC,cAAAhF,OAAA,uBAA7CA,OAAA,CAA+C8C,GAAI;gBACxD4K,GAAG,EAAE,SAASnN,YAAY,GAAG,CAAC,EAAG;gBACjC+L,SAAS,EAAE,eAAerL,YAAY,GAAG,kBAAkB,GAAG,EAAE;cAAG;gBAAAuL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpE,CAAC,eACFhN,OAAA;gBAAK2M,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,eACnC5M,OAAA;kBAAG2M,SAAS,EAAC,YAAY;kBAAAC,QAAA,EACtB,EAAArM,qBAAA,GAAAmB,MAAM,CAACd,YAAY,CAAC,cAAAL,qBAAA,uBAApBA,qBAAA,CAAsB2E,IAAI,KAAI;gBAAE;kBAAA2H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACNhN,OAAA;gBAAK2M,SAAS,EAAE,iBAAiBnL,eAAe,GAAG,MAAM,GAAG,MAAM,EAAG;gBAAAoL,QAAA,GAClEhM,YAAY,GAAG,CAAC,EAAC,KAAG,EAACc,MAAM,CAACgC,MAAM;cAAA;gBAAAmJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC,eACNhN,OAAA;gBAAK2M,SAAS,EAAE,gBAAgBnL,eAAe,GAAG,MAAM,GAAG,MAAM,EAAG;gBAAAoL,QAAA,GACjEH,UAAU,CAACvL,WAAW,CAAC,EAAC,KAAG,EAACuL,UAAU,CAACzL,QAAQ,CAAC;cAAA;gBAAA6L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eAGNhN,OAAA;gBACEoN,OAAO,EAAEnD,gBAAiB;gBAC1B0C,SAAS,EAAE,qBAAqBnL,eAAe,GAAG,MAAM,GAAG,MAAM,EAAG;gBACpEwM,KAAK,EAAE1M,YAAY,GAAG,iBAAiB,GAAG,kBAAmB;gBAAAsL,QAAA,EAE5DtL,YAAY,gBAAGtB,OAAA,CAACN,SAAS;kBAAC4N,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGhN,OAAA,CAACP,SAAS;kBAAC6N,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CAAC,EAGR1L,YAAY,iBACXtB,OAAA,CAAAE,SAAA;gBAAA0M,QAAA,gBACE5M,OAAA;kBACEoN,OAAO,EAAEvC,iBAAkB;kBAC3B8B,SAAS,EAAE,0BAA0BnL,eAAe,GAAG,MAAM,GAAG,MAAM,EAAG;kBACzEyM,QAAQ,EAAErN,YAAY,KAAK,CAAE;kBAAAgM,QAAA,eAE7B5M,OAAA,CAACL,WAAW;oBAAC2N,IAAI,EAAE;kBAAG;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,eACThN,OAAA;kBACEoN,OAAO,EAAExC,aAAc;kBACvB+B,SAAS,EAAE,0BAA0BnL,eAAe,GAAG,MAAM,GAAG,MAAM,EAAG;kBACzEyM,QAAQ,EAAErN,YAAY,KAAKc,MAAM,CAACgC,MAAM,GAAG,CAAE;kBAAAkJ,QAAA,eAE7C5M,OAAA,CAACJ,YAAY;oBAAC0N,IAAI,EAAE;kBAAG;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpB,CAAC;cAAA,eACT,CACH;YAAA,GA7CiCpM,YAAY;cAAAiM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA8C3C,CAAC,gBAENhN,OAAA;cAAK2M,SAAS,EAAC,iBAAiB;cAAAC,QAAA,eAC9B5M,OAAA;gBAAK2M,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5B5M,OAAA,CAACd,MAAM;kBAACoO,IAAI,EAAE,EAAG;kBAACX,SAAS,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC3ChN,OAAA;kBAAA4M,QAAA,EAAG;gBAAoC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAGLxM,SAAS,iBACRR,OAAA;YAAK2M,SAAS,EAAE,kBAAkBrL,YAAY,GAAG,2BAA2B,GAAG,EAAE,IAAIE,eAAe,GAAG,MAAM,GAAG,MAAM,EAAG;YAAAoL,QAAA,gBACvH5M,OAAA;cACEiN,GAAG,EAAE1K,QAAS;cACduL,GAAG,EAAEtN,SAAU;cACf0N,gBAAgB,EAAErH,oBAAqB;cACvCsH,YAAY,EAAEpH,gBAAiB;cAC/BqH,OAAO,EAAEA,CAAA,KAAMrN,YAAY,CAAC,KAAK,CAAE;cACnC4L,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eAEFhN,OAAA;cAAK2M,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClC5M,OAAA;gBACEoN,OAAO,EAAEpG,eAAgB;gBACzB2F,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAEtB9L,SAAS,gBAAGd,OAAA,CAACf,KAAK;kBAACqO,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGhN,OAAA,CAAChB,IAAI;kBAACsO,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,eAEThN,OAAA;gBAAK2M,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC7B5M,OAAA;kBACEiD,IAAI,EAAC,OAAO;kBACZ2D,GAAG,EAAC,GAAG;kBACPyH,GAAG,EAAC,KAAK;kBACT/K,KAAK,EAAEtC,QAAQ,GAAIE,WAAW,GAAGF,QAAQ,GAAI,GAAG,GAAG,CAAE;kBACrDmM,QAAQ,EAAE3F,UAAW;kBACrBmF,SAAS,EAAC;gBAAa;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENhN,OAAA;gBAAK2M,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7B5M,OAAA,CAACb,OAAO;kBAACmO,IAAI,EAAE,EAAG;kBAACX,SAAS,EAAC;gBAAa;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC7ChN,OAAA;kBACEiD,IAAI,EAAC,OAAO;kBACZ2D,GAAG,EAAC,GAAG;kBACPyH,GAAG,EAAC,GAAG;kBACPC,IAAI,EAAC,KAAK;kBACVhL,KAAK,EAAElC,MAAO;kBACd+L,QAAQ,EAAE9F,kBAAmB;kBAC7BsF,SAAS,EAAC;gBAAe;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EAEL,CAAC1L,YAAY,iBACZtB,OAAA;cACEoN,OAAO,EAAErC,qBAAsB;cAC/BkD,QAAQ,EAAE,CAACzN,SAAU;cACrBmM,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAE5B5M,OAAA,CAACZ,IAAI;gBAACkO,IAAI,EAAE;cAAG;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,iBACL,EAACP,UAAU,CAACvL,WAAW,CAAC;YAAA;cAAA2L,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAGL,CAAC1L,YAAY,iBACZtB,OAAA;UAAK2M,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B5M,OAAA;YAAK2M,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B5M,OAAA;cAAK2M,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnC5M,OAAA;gBAAI2M,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/ChN,OAAA;gBAAK2M,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,eAChC5M,OAAA;kBAAO2M,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC7B5M,OAAA;oBACEiD,IAAI,EAAC,UAAU;oBACfsL,OAAO,EAAEvM,gBAAiB;oBAC1BmL,QAAQ,EAAG9I,CAAC,IAAKpC,mBAAmB,CAACoC,CAAC,CAACtB,MAAM,CAACwL,OAAO;kBAAE;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxD,CAAC,eACFhN,OAAA;oBAAM2M,SAAS,EAAC,aAAa;oBAAAC,QAAA,EAAC;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC/ChN,OAAA;oBAAM2M,SAAS,EAAE,iBAAiB3K,gBAAgB,GAAG,SAAS,GAAG,UAAU,EAAG;oBAAA4K,QAAA,EAC3E5K,gBAAgB,GAAG,IAAI,GAAG;kBAAK;oBAAA6K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhN,OAAA;cAAK2M,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B5M,OAAA;gBACEoN,OAAO,EAAEA,CAAA,KAAMzL,SAAS,CAAC,EAAE,CAAE;gBAC7BsM,QAAQ,EAAEvM,MAAM,CAACgC,MAAM,KAAK,CAAE;gBAC9BiJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EACzB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACThN,OAAA;gBACEoN,OAAO,EAAE/B,WAAY;gBACrB4C,QAAQ,EAAEvM,MAAM,CAACgC,MAAM,KAAK,CAAE;gBAC9BiJ,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAEzB5M,OAAA,CAACX,QAAQ;kBAACiO,IAAI,EAAE;gBAAG;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,cAExB;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGL9K,cAAc,iBACblC,OAAA;YAAK2M,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B5M,OAAA;cAAK2M,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B5M,OAAA;gBAAM2M,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,GAAC,aACrB,EAAC1K,cAAc,CAACkH,cAAc,CAAC1F,MAAM,EAAC,SACnD;cAAA;gBAAAmJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACPhN,OAAA;gBAAK2M,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9B5M,OAAA;kBAAQoN,OAAO,EAAEzD,mBAAoB;kBAACgD,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAE/D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACThN,OAAA;kBAAQoN,OAAO,EAAExD,oBAAqB;kBAAC+C,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAEjE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhN,OAAA;cAAK2M,SAAS,EAAC,kBAAkB;cAAAC,QAAA,GAC9B1K,cAAc,CAACkH,cAAc,CAACtD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC2C,GAAG,CAAC,CAACL,KAAK,EAAE1C,KAAK,kBAC1D1F,OAAA;gBAAoB2M,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC1C5M,OAAA;kBAAM2M,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAExE,KAAK,CAAClD;gBAAI;kBAAA2H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClDhN,OAAA;kBAAM2M,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAC3BlF,aAAa,CAACU,KAAK,CAACjD,SAAS,CAAC,EAAC,UAAG,EAACuC,aAAa,CAACU,KAAK,CAAChD,OAAO,CAAC;gBAAA;kBAAAyH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5D,CAAC;cAAA,GAJC5E,KAAK,CAACrD,EAAE;gBAAA8H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKb,CACN,CAAC,EACD9K,cAAc,CAACkH,cAAc,CAAC1F,MAAM,GAAG,CAAC,iBACvC1D,OAAA;gBAAK2M,SAAS,EAAC,cAAc;gBAAAC,QAAA,GAAC,GAC3B,EAAC1K,cAAc,CAACkH,cAAc,CAAC1F,MAAM,GAAG,CAAC,EAAC,cAC7C;cAAA;gBAAAmJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAGDhN,OAAA;YAAK2M,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GAC7BlL,MAAM,CAAC+G,GAAG,CAAC,CAACL,KAAK,EAAE1C,KAAK,kBACvB1F,OAAA;cAEE2M,SAAS,EAAE,cAAcjH,KAAK,KAAK9E,YAAY,GAAG,QAAQ,GAAG,EAAE,IAAIwB,cAAc,KAAKgG,KAAK,CAACrD,EAAE,GAAG,SAAS,GAAG,EAAE,EAAG;cAAA6H,QAAA,eAElH5M,OAAA;gBAAK2M,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB5M,OAAA;kBAAK2M,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,eAC/B5M,OAAA;oBACEsD,KAAK,EAAE8E,KAAK,CAAClD,IAAK;oBAClBiI,QAAQ,EAAG9I,CAAC,IAAKwE,eAAe,CAACT,KAAK,CAACrD,EAAE,EAAE,MAAM,EAAEV,CAAC,CAACtB,MAAM,CAACO,KAAK,CAAE;oBACnEqJ,SAAS,EAAC,yBAAyB;oBACnC6B,WAAW,EAAC,YAAY;oBACxBC,IAAI,EAAE;kBAAE;oBAAA5B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACNhN,OAAA;kBAAK2M,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EAChCxK,cAAc,KAAKgG,KAAK,CAACrD,EAAE,gBAC1B/E,OAAA;oBAAK2M,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1B5M,OAAA;sBAAK2M,SAAS,EAAC,aAAa;sBAAAC,QAAA,gBAC1B5M,OAAA;wBAAK2M,SAAS,EAAC,kBAAkB;wBAAAC,QAAA,gBAC/B5M,OAAA;0BAAA4M,QAAA,EAAO;wBAAK;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,eACpBhN,OAAA;0BACEiD,IAAI,EAAC,QAAQ;0BACbK,KAAK,EAAE8E,KAAK,CAACjD,SAAU;0BACvBgI,QAAQ,EAAG9I,CAAC,IAAKwE,eAAe,CAACT,KAAK,CAACrD,EAAE,EAAE,WAAW,EAAEV,CAAC,CAACtB,MAAM,CAACO,KAAK,CAAE;0BACxEgL,IAAI,EAAC,KAAK;0BACV1H,GAAG,EAAC,GAAG;0BACP+F,SAAS,EAAC;wBAAc;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACzB,CAAC,eACFhN,OAAA;0BAAK2M,SAAS,EAAC,cAAc;0BAAAC,QAAA,gBAC3B5M,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAE;4BAAA6H,QAAA,EAAC;0BAAG;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eAC1EhN,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,WAAW,EAAE,CAAC,GAAG,CAAE;4BAAA6H,QAAA,EAAC;0BAAK;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eAC9EhN,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,WAAW,EAAE,GAAG,CAAE;4BAAA6H,QAAA,EAAC;0BAAK;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eAC7EhN,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,WAAW,EAAE,CAAC,CAAE;4BAAA6H,QAAA,EAAC;0BAAG;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACtE,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,eACNhN,OAAA;wBAAK2M,SAAS,EAAC,kBAAkB;wBAAAC,QAAA,gBAC/B5M,OAAA;0BAAA4M,QAAA,EAAO;wBAAG;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,eAClBhN,OAAA;0BACEiD,IAAI,EAAC,QAAQ;0BACbK,KAAK,EAAE8E,KAAK,CAAChD,OAAQ;0BACrB+H,QAAQ,EAAG9I,CAAC,IAAKwE,eAAe,CAACT,KAAK,CAACrD,EAAE,EAAE,SAAS,EAAEV,CAAC,CAACtB,MAAM,CAACO,KAAK,CAAE;0BACtEgL,IAAI,EAAC,KAAK;0BACV1H,GAAG,EAAC,GAAG;0BACP+F,SAAS,EAAE,gBAAgB3K,gBAAgB,GAAG,oBAAoB,GAAG,EAAE;wBAAG;0BAAA6K,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC3E,CAAC,eACFhN,OAAA;0BAAK2M,SAAS,EAAC,cAAc;0BAAAC,QAAA,gBAC3B5M,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAE;4BAAA6H,QAAA,EAAC;0BAAG;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eACxEhN,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,CAAE;4BAAA6H,QAAA,EAAC;0BAAK;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eAC5EhN,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,SAAS,EAAE,GAAG,CAAE;4BAAA6H,QAAA,EAAC;0BAAK;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eAC3EhN,OAAA;4BAAQoN,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAACnB,KAAK,CAACrD,EAAE,EAAE,SAAS,EAAE,CAAC,CAAE;4BAAA6H,QAAA,EAAC;0BAAG;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpE,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,eACNhN,OAAA;sBAAK2M,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3B5M,OAAA;wBAAK2M,SAAS,EAAC,mBAAmB;wBAACe,KAAK,EAAE;0BACxCgB,IAAI,EAAE,GAAItG,KAAK,CAACjD,SAAS,GAAGnE,QAAQ,GAAI,GAAG,GAAG;0BAC9C2N,KAAK,EAAE,GAAI,CAACvG,KAAK,CAAChD,OAAO,GAAGgD,KAAK,CAACjD,SAAS,IAAInE,QAAQ,GAAI,GAAG;wBAChE;sBAAE;wBAAA6L,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACF,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,gBAENhN,OAAA;oBAAK2M,SAAS,EAAC,cAAc;oBAAAC,QAAA,gBAC3B5M,OAAA;sBAAA4M,QAAA,GAAOlF,aAAa,CAACU,KAAK,CAACjD,SAAS,CAAC,EAAC,UAAG,EAACuC,aAAa,CAACU,KAAK,CAAChD,OAAO,CAAC;oBAAA;sBAAAyH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eAC9EhN,OAAA;sBACEoN,OAAO,EAAEA,CAAA,KAAM/K,iBAAiB,CAAC+F,KAAK,CAACrD,EAAE,CAAE;sBAC3C4H,SAAS,EAAC,aAAa;sBAAAC,QAAA,eAEvB5M,OAAA,CAACH,MAAM;wBAACyN,IAAI,EAAE;sBAAG;wBAAAT,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACd,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACN;gBACN;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACNhN,OAAA;kBAAK2M,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAC3BxK,cAAc,KAAKgG,KAAK,CAACrD,EAAE,gBAC1B/E,OAAA;oBACEoN,OAAO,EAAEA,CAAA,KAAM/K,iBAAiB,CAAC,IAAI,CAAE;oBACvCsK,SAAS,EAAC,cAAc;oBAAAC,QAAA,eAExB5M,OAAA,CAACF,KAAK;sBAACwN,IAAI,EAAE;oBAAG;sBAAAT,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,gBAEThN,OAAA;oBACEoN,OAAO,EAAEA,CAAA,KAAMhC,WAAW,CAAChD,KAAK,CAACrD,EAAE,CAAE;oBACrC4H,SAAS,EAAC,eAAe;oBAAAC,QAAA,eAEzB5M,OAAA,CAACV,MAAM;sBAACgO,IAAI,EAAE;oBAAG;sBAAAT,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACd;gBACT;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GAxFD5E,KAAK,CAACrD,EAAE;cAAA8H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAyFV,CACN,CAAC,EAEDtL,MAAM,CAACgC,MAAM,KAAK,CAAC,iBAClB1D,OAAA;cAAK2M,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B5M,OAAA,CAACT,KAAK;gBAAC+N,IAAI,EAAE,EAAG;gBAACX,SAAS,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1ChN,OAAA;gBAAA4M,QAAA,EAAG;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAC1BhN,OAAA;gBAAG2M,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAA6C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGL,CAAC1L,YAAY,iBACZtB,OAAA;QAAK2M,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnC5M,OAAA;UAAK2M,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC5M,OAAA;YAAA4M,QAAA,gBACE5M,OAAA;cAAI2M,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtDhN,OAAA;cAAI2M,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC/B5M,OAAA;gBAAA4M,QAAA,EAAI;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChChN,OAAA;gBAAA4M,QAAA,EAAI;cAAyD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClEhN,OAAA;gBAAA4M,QAAA,EAAI;cAAwC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjDhN,OAAA;gBAAA4M,QAAA,EAAI;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACNhN,OAAA;YAAA4M,QAAA,gBACE5M,OAAA;cAAI2M,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxDhN,OAAA;cAAI2M,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC/B5M,OAAA;gBAAA4M,QAAA,EAAI;cAAoC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7ChN,OAAA;gBAAA4M,QAAA,EAAI;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChChN,OAAA;gBAAA4M,QAAA,EAAI;cAAsD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/DhN,OAAA;gBAAA4M,QAAA,EAAI;cAA0B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENhN,OAAA;UAAK2M,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B5M,OAAA;YAAI2M,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDhN,OAAA;YAAK2M,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1C;AACD;AACA;AACA;AACA;AACA;AACA;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5M,EAAA,CAz7BID,iBAAiB;AAAAyO,EAAA,GAAjBzO,iBAAiB;AA27BvB,eAAeA,iBAAiB;AAAC,IAAAyO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}