{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smith\\\\Documents\\\\slideshow-music-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvancedSlideshow = () => {\n  _s();\n  var _images, _slides$currentSlide, _slides$currentSlide2;\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n\n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n\n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Convert time string to seconds\n  const timeToSeconds = timeStr => {\n    // Support format: mm:ss atau mm:ss.sss\n    const parts = timeStr.split(':');\n    if (parts.length === 2) {\n      const minutes = parseInt(parts[0]) || 0;\n      const seconds = parseFloat(parts[1]) || 0;\n      return minutes * 60 + seconds;\n    }\n    return 0;\n  };\n\n  // Convert seconds to time string\n  const secondsToTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins.toString().padStart(2, '0')}:${secs.padStart(4, '0')}`;\n  };\n\n  // Parse SRT file\n  const parseSRT = srtText => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n\n        // Parse time format: 00:00:10,500 --> 00:00:13,240\n        const timeMatch = timeLine.match(/(\\d{2}:\\d{2}:\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}:\\d{2}:\\d{2}),(\\d{3})/);\n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n\n          // Use first line as text, or combine all text lines\n          const text = textLines.join(' ').trim();\n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n    return parsedSlides;\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const srtText = e.target.result;\n        console.log('SRT content:', srtText);\n        const parsedSlides = parseSRT(srtText);\n        console.log('Parsed slides:', parsedSlides);\n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Handle audio file upload\n  const handleAudioUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({\n          url,\n          name: file.name\n        });\n      }\n    });\n    setImages(imageUrls);\n    setCurrentSlide(0);\n\n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = imageCount => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10,\n        // Default 10 seconds per slide\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  const handleSeek = e => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = e.target.value / 100 * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Manual slide timing editor\n  const updateSlideTime = (slideId, field, value) => {\n    setSlides(slides.map(slide => slide.id === slideId ? {\n      ...slide,\n      [field]: field === 'text' ? value : timeToSeconds(value)\n    } : slide));\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = slideId => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    const blob = new Blob([srtContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor(seconds % 1 * 1000);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Advanced Slideshow with Custom Timing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"upload-label\",\n              children: \"Upload Audio File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \"audio/*\",\n              onChange: handleAudioUpload,\n              className: \"hidden-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              className: \"upload-button audio-button\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), \"Choose Audio\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"upload-label\",\n              children: \"Upload Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: imageInputRef,\n              type: \"file\",\n              accept: \"image/*\",\n              multiple: true,\n              onChange: handleImagesUpload,\n              className: \"hidden-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _imageInputRef$curren;\n                return (_imageInputRef$curren = imageInputRef.current) === null || _imageInputRef$curren === void 0 ? void 0 : _imageInputRef$curren.click();\n              },\n              className: \"upload-button image-button\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), \"Images (\", images.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"upload-label\",\n              children: \"Upload SRT File (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: srtInputRef,\n              type: \"file\",\n              accept: \".srt\",\n              onChange: handleSRTUpload,\n              className: \"hidden-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _srtInputRef$current;\n                return (_srtInputRef$current = srtInputRef.current) === null || _srtInputRef$current === void 0 ? void 0 : _srtInputRef$current.click();\n              },\n              className: \"upload-button srt-button\",\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), \"SRT Timing\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timing-mode\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mode-indicator ${timingMode === 'manual' ? 'active' : ''}`,\n            children: \"Manual Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mode-indicator ${timingMode === 'srt' ? 'active' : ''}`,\n            children: [\"SRT Timing \", srtFile && `(${srtFile})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slideshow-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slideshow-display\",\n            children: images.length > 0 && slides.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_images = images[((_slides$currentSlide = slides[currentSlide]) === null || _slides$currentSlide === void 0 ? void 0 : _slides$currentSlide.imageIndex) || 0]) === null || _images === void 0 ? void 0 : _images.url,\n                alt: `Slide ${currentSlide + 1}`,\n                className: \"slide-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-text-container\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"slide-text\",\n                  children: ((_slides$currentSlide2 = slides[currentSlide]) === null || _slides$currentSlide2 === void 0 ? void 0 : _slides$currentSlide2.text) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-counter\",\n                children: [currentSlide + 1, \" / \", slides.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-counter\",\n                children: [formatTime(currentTime), \" / \", formatTime(duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this)]\n            }, currentSlide, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-slideshow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-content\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 48,\n                  className: \"empty-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload audio, images, and set timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), audioFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              ref: audioRef,\n              src: audioFile,\n              onLoadedMetadata: handleLoadedMetadata,\n              onTimeUpdate: handleTimeUpdate,\n              onEnded: () => setIsPlaying(false),\n              className: \"hidden-audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-controls-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePlayPause,\n                className: \"play-button\",\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seek-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: duration ? currentTime / duration * 100 : 0,\n                  onChange: handleSeek,\n                  className: \"seek-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-control\",\n                children: [/*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 20,\n                  className: \"volume-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"1\",\n                  step: \"0.1\",\n                  value: volume,\n                  onChange: handleVolumeChange,\n                  className: \"volume-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addSlideAtCurrentTime,\n              disabled: !audioFile,\n              className: \"add-slide-button\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), \"Add Slide at \", formatTime(currentTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timing-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"editor-title\",\n              children: \"Timing Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSlides([]),\n                disabled: slides.length === 0,\n                className: \"clear-button\",\n                children: \"Clear All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: exportToSRT,\n                disabled: slides.length === 0,\n                className: \"export-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 19\n                }, this), \"Export SRT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slides-timeline\",\n            children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `slide-item ${index === currentSlide ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-text-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: slide.text,\n                    onChange: e => updateSlideTime(slide.id, 'text', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"Slide text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: secondsToTime(slide.startTime),\n                    onChange: e => updateSlideTime(slide.id, 'startTime', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"Start time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: secondsToTime(slide.endTime),\n                    onChange: e => updateSlideTime(slide.id, 'endTime', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"End time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteSlide(slide.id),\n                    className: \"delete-button\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this)\n            }, slide.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)), slides.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-timeline\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                size: 32,\n                className: \"empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No slides added yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-subtext\",\n                children: \"Upload images and add timing, or use SRT file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"Manual Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Play audio and click \\\"Add Slide at [time]\\\" for each slide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Edit slide text and timing in the editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Export to SRT if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"SRT File Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Create or download SRT subtitle file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload SRT file - timing will be applied automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Fine-tune timing if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"srt-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"example-title\",\n            children: \"SRT Format Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"example-code\",\n            children: `1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedSlideshow, \"hAvnkqpP6dhUGDBZum9PFnC21e0=\");\n_c = AdvancedSlideshow;\nexport default AdvancedSlideshow;\nvar _c;\n$RefreshReg$(_c, \"AdvancedSlideshow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Play","Pause","Upload","Volume2","Plus","Download","Trash2","Clock","FileText","jsxDEV","_jsxDEV","AdvancedSlideshow","_s","_images","_slides$currentSlide","_slides$currentSlide2","audioFile","setAudioFile","images","setImages","currentSlide","setCurrentSlide","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","slides","setSlides","srtFile","setSrtFile","timingMode","setTimingMode","audioRef","fileInputRef","imageInputRef","srtInputRef","length","activeSlide","i","startTime","timeToSeconds","timeStr","parts","split","minutes","parseInt","seconds","parseFloat","secondsToTime","mins","Math","floor","secs","toFixed","toString","padStart","parseSRT","srtText","blocks","trim","parsedSlides","forEach","block","index","lines","timeLine","textLines","slice","timeMatch","match","startH","startM","startS","startMs","endH","endM","endS","endMs","endTime","text","join","push","id","Date","now","imageIndex","min","handleSRTUpload","event","file","target","files","name","endsWith","reader","FileReader","onload","e","result","console","log","alert","readAsText","value","handleAudioUpload","type","startsWith","url","URL","createObjectURL","handleImagesUpload","Array","from","imageUrls","createDefaultSlides","imageCount","defaultSlides","handleLoadedMetadata","current","handleTimeUpdate","handlePlayPause","pause","play","error","handleVolumeChange","newVolume","handleSeek","seekTime","updateSlideTime","slideId","field","map","slide","addSlideAtCurrentTime","newSlide","updatedSlides","sort","a","b","deleteSlide","filter","exportToSRT","srtContent","formatSRTTime","blob","Blob","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","hours","ms","formatTime","time","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","onClick","_fileInputRef$current","size","multiple","_imageInputRef$curren","_srtInputRef$current","src","alt","onLoadedMetadata","onTimeUpdate","onEnded","max","step","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Smith/Documents/slideshow-music-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText } from 'lucide-react';\nimport './App.css';\n\nconst AdvancedSlideshow = () => {\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  \n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n  \n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      \n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Convert time string to seconds\n  const timeToSeconds = (timeStr) => {\n    // Support format: mm:ss atau mm:ss.sss\n    const parts = timeStr.split(':');\n    if (parts.length === 2) {\n      const minutes = parseInt(parts[0]) || 0;\n      const seconds = parseFloat(parts[1]) || 0;\n      return minutes * 60 + seconds;\n    }\n    return 0;\n  };\n\n  // Convert seconds to time string\n  const secondsToTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins.toString().padStart(2, '0')}:${secs.padStart(4, '0')}`;\n  };\n\n  // Parse SRT file\n  const parseSRT = (srtText) => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n        \n        // Parse time format: 00:00:10,500 --> 00:00:13,240\n        const timeMatch = timeLine.match(/(\\d{2}:\\d{2}:\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}:\\d{2}:\\d{2}),(\\d{3})/);\n        \n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          \n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n          \n          // Use first line as text, or combine all text lines\n          const text = textLines.join(' ').trim();\n          \n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n\n    return parsedSlides;\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const srtText = e.target.result;\n        console.log('SRT content:', srtText);\n        \n        const parsedSlides = parseSRT(srtText);\n        console.log('Parsed slides:', parsedSlides);\n        \n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Handle audio file upload\n  const handleAudioUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    \n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({ url, name: file.name });\n      }\n    });\n    \n    setImages(imageUrls);\n    setCurrentSlide(0);\n    \n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    \n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = (imageCount) => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10, // Default 10 seconds per slide\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const handleSeek = (e) => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = (e.target.value / 100) * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Manual slide timing editor\n  const updateSlideTime = (slideId, field, value) => {\n    setSlides(slides.map(slide => \n      slide.id === slideId \n        ? { ...slide, [field]: field === 'text' ? value : timeToSeconds(value) }\n        : slide\n    ));\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    \n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = (slideId) => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      \n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    \n    const blob = new Blob([srtContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor((seconds % 1) * 1000);\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  const formatTime = (time) => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-content\">\n        <h1 className=\"app-title\">\n          Advanced Slideshow with Custom Timing\n        </h1>\n        \n        {/* Upload Section */}\n        <div className=\"upload-section\">\n          <div className=\"upload-grid\">\n            <div>\n              <label className=\"upload-label\">\n                Upload Audio File\n              </label>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"audio/*\"\n                onChange={handleAudioUpload}\n                className=\"hidden-input\"\n              />\n              <button\n                onClick={() => fileInputRef.current?.click()}\n                className=\"upload-button audio-button\"\n              >\n                <Upload size={20} />\n                Choose Audio\n              </button>\n            </div>\n            \n            <div>\n              <label className=\"upload-label\">\n                Upload Images\n              </label>\n              <input\n                ref={imageInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                multiple\n                onChange={handleImagesUpload}\n                className=\"hidden-input\"\n              />\n              <button\n                onClick={() => imageInputRef.current?.click()}\n                className=\"upload-button image-button\"\n              >\n                <Upload size={20} />\n                Images ({images.length})\n              </button>\n            </div>\n\n            <div>\n              <label className=\"upload-label\">\n                Upload SRT File (Optional)\n              </label>\n              <input\n                ref={srtInputRef}\n                type=\"file\"\n                accept=\".srt\"\n                onChange={handleSRTUpload}\n                className=\"hidden-input\"\n              />\n              <button\n                onClick={() => srtInputRef.current?.click()}\n                className=\"upload-button srt-button\"\n              >\n                <FileText size={20} />\n                SRT Timing\n              </button>\n            </div>\n          </div>\n\n          {/* Timing Mode Indicator */}\n          <div className=\"timing-mode\">\n            <div className={`mode-indicator ${timingMode === 'manual' ? 'active' : ''}`}>\n              Manual Timing\n            </div>\n            <div className={`mode-indicator ${timingMode === 'srt' ? 'active' : ''}`}>\n              SRT Timing {srtFile && `(${srtFile})`}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"main-grid\">\n          {/* Slideshow Display */}\n          <div className=\"slideshow-container\">\n            <div className=\"slideshow-display\">\n              {images.length > 0 && slides.length > 0 ? (\n                <div className=\"slide-content\" key={currentSlide}>\n                  <img\n                    src={images[slides[currentSlide]?.imageIndex || 0]?.url}\n                    alt={`Slide ${currentSlide + 1}`}\n                    className=\"slide-image\"\n                  />\n                  <div className=\"slide-text-container\">\n                    <p className=\"slide-text\">\n                      {slides[currentSlide]?.text || ''}\n                    </p>\n                  </div>\n                  <div className=\"slide-counter\">\n                    {currentSlide + 1} / {slides.length}\n                  </div>\n                  <div className=\"time-counter\">\n                    {formatTime(currentTime)} / {formatTime(duration)}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"empty-slideshow\">\n                  <div className=\"empty-content\">\n                    <Upload size={48} className=\"empty-icon\" />\n                    <p>Upload audio, images, and set timing</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Audio Controls */}\n            {audioFile && (\n              <div className=\"audio-controls\">\n                <audio\n                  ref={audioRef}\n                  src={audioFile}\n                  onLoadedMetadata={handleLoadedMetadata}\n                  onTimeUpdate={handleTimeUpdate}\n                  onEnded={() => setIsPlaying(false)}\n                  className=\"hidden-audio\"\n                />\n                \n                <div className=\"audio-controls-grid\">\n                  <button\n                    onClick={handlePlayPause}\n                    className=\"play-button\"\n                  >\n                    {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                  </button>\n                  \n                  <div className=\"seek-container\">\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={duration ? (currentTime / duration) * 100 : 0}\n                      onChange={handleSeek}\n                      className=\"seek-slider\"\n                    />\n                  </div>\n                  \n                  <div className=\"volume-control\">\n                    <Volume2 size={20} className=\"volume-icon\" />\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={volume}\n                      onChange={handleVolumeChange}\n                      className=\"volume-slider\"\n                    />\n                  </div>\n                </div>\n                \n                <button\n                  onClick={addSlideAtCurrentTime}\n                  disabled={!audioFile}\n                  className=\"add-slide-button\"\n                >\n                  <Plus size={16} />\n                  Add Slide at {formatTime(currentTime)}\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Timing Editor */}\n          <div className=\"timing-editor\">\n            <div className=\"editor-header\">\n              <h3 className=\"editor-title\">Timing Editor</h3>\n              <div className=\"editor-actions\">\n                <button\n                  onClick={() => setSlides([])}\n                  disabled={slides.length === 0}\n                  className=\"clear-button\"\n                >\n                  Clear All\n                </button>\n                <button\n                  onClick={exportToSRT}\n                  disabled={slides.length === 0}\n                  className=\"export-button\"\n                >\n                  <Download size={14} />\n                  Export SRT\n                </button>\n              </div>\n            </div>\n\n            {/* Slides Timeline */}\n            <div className=\"slides-timeline\">\n              {slides.map((slide, index) => (\n                <div\n                  key={slide.id}\n                  className={`slide-item ${index === currentSlide ? 'active' : ''}`}\n                >\n                  <div className=\"slide-grid\">\n                    <div className=\"slide-text-input\">\n                      <input\n                        type=\"text\"\n                        value={slide.text}\n                        onChange={(e) => updateSlideTime(slide.id, 'text', e.target.value)}\n                        className=\"timing-input\"\n                        placeholder=\"Slide text\"\n                      />\n                    </div>\n                    <div className=\"slide-time-input\">\n                      <input\n                        type=\"text\"\n                        value={secondsToTime(slide.startTime)}\n                        onChange={(e) => updateSlideTime(slide.id, 'startTime', e.target.value)}\n                        className=\"timing-input\"\n                        placeholder=\"Start time\"\n                      />\n                    </div>\n                    <div className=\"slide-time-input\">\n                      <input\n                        type=\"text\"\n                        value={secondsToTime(slide.endTime)}\n                        onChange={(e) => updateSlideTime(slide.id, 'endTime', e.target.value)}\n                        className=\"timing-input\"\n                        placeholder=\"End time\"\n                      />\n                    </div>\n                    <div className=\"slide-actions\">\n                      <button\n                        onClick={() => deleteSlide(slide.id)}\n                        className=\"delete-button\"\n                      >\n                        <Trash2 size={14} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {slides.length === 0 && (\n                <div className=\"empty-timeline\">\n                  <Clock size={32} className=\"empty-icon\" />\n                  <p>No slides added yet</p>\n                  <p className=\"empty-subtext\">Upload images and add timing, or use SRT file</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"instructions-section\">\n          <div className=\"instructions-grid\">\n            <div>\n              <h3 className=\"instructions-title\">Manual Timing:</h3>\n              <ol className=\"instructions-list\">\n                <li>Upload audio and images</li>\n                <li>Play audio and click \"Add Slide at [time]\" for each slide</li>\n                <li>Edit slide text and timing in the editor</li>\n                <li>Export to SRT if needed</li>\n              </ol>\n            </div>\n            <div>\n              <h3 className=\"instructions-title\">SRT File Method:</h3>\n              <ol className=\"instructions-list\">\n                <li>Create or download SRT subtitle file</li>\n                <li>Upload audio and images</li>\n                <li>Upload SRT file - timing will be applied automatically</li>\n                <li>Fine-tune timing if needed</li>\n              </ol>\n            </div>\n          </div>\n          \n          <div className=\"srt-example\">\n            <h4 className=\"example-title\">SRT Format Example:</h4>\n            <pre className=\"example-code\">\n{`1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`}\n            </pre>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSlideshow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}