{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smith\\\\Documents\\\\slideshow-music-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvancedSlideshow = () => {\n  _s();\n  var _images, _slides$currentSlide, _slides$currentSlide2;\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const hideTimeoutRef = useRef(null);\n\n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n\n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Auto-hide controls handler\n  const handleMouseMove = () => {\n    setControlsVisible(true);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n    hideTimeoutRef.current = setTimeout(() => {\n      setControlsVisible(false);\n    }, 2000);\n  };\n  const handleMouseLeave = () => {\n    setControlsVisible(false);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Reset controls visibility when exiting fullscreen\n  useEffect(() => {\n    if (!isFullscreen) {\n      setControlsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    }\n  }, [isFullscreen]);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = event => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Convert time string to seconds\n  const timeToSeconds = timeStr => {\n    // Handle SRT format: HH:MM:SS,mmm\n    const srtMatch = timeStr.match(/^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/);\n    if (srtMatch) {\n      const [, hours, minutes, seconds, milliseconds] = srtMatch;\n      return parseInt(hours) * 3600 + parseInt(minutes) * 60 + parseInt(seconds) + parseInt(milliseconds) / 1000;\n    }\n\n    // Handle MM:SS format\n    const parts = timeStr.split(':');\n    if (parts.length === 2) {\n      const minutes = parseInt(parts[0]) || 0;\n      const seconds = parseFloat(parts[1]) || 0;\n      return minutes * 60 + seconds;\n    }\n    return 0;\n  };\n\n  // Convert seconds to time string\n  const secondsToTime = seconds => {\n    if (isNaN(seconds)) return '00:00:00,000';\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor(seconds % 1 * 1000);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  // Parse SRT file\n  const parseSRT = srtText => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n\n        // Parse time format: 00:00:10,500 --> 00:00:13,240\n        const timeMatch = timeLine.match(/^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/);\n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n\n          // Combine all text lines\n          const text = textLines.join('\\n').trim();\n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n    return parsedSlides;\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const srtText = e.target.result;\n        console.log('SRT content:', srtText);\n        const parsedSlides = parseSRT(srtText);\n        console.log('Parsed slides:', parsedSlides);\n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Handle audio file upload\n  const handleAudioUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({\n          url,\n          name: file.name\n        });\n      }\n    });\n    setImages(imageUrls);\n    setCurrentSlide(0);\n\n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = imageCount => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10,\n        // Default 10 seconds per slide\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  const handleSeek = e => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = e.target.value / 100 * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Validasi format waktu SRT\n  const validateSRTTime = timeStr => {\n    const srtTimeRegex = /^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/;\n    return srtTimeRegex.test(timeStr);\n  };\n\n  // Auto-shift logic\n  const autoShiftSubsequentSlides = (changedSlideId, newEndTime, oldEndTime) => {\n    const timeDifference = newEndTime - oldEndTime;\n    const changedSlideIndex = slides.findIndex(slide => slide.id === changedSlideId);\n\n    // Validasi minimum gap\n    const MIN_GAP = 0.1;\n    const nextSlide = slides[changedSlideIndex + 1];\n    if (nextSlide && newEndTime + MIN_GAP > nextSlide.startTime) {\n      return null; // Invalid timing\n    }\n    return slides.map((slide, index) => {\n      if (index > changedSlideIndex) {\n        const newStartTime = slide.startTime + timeDifference;\n        const newEndTime = slide.endTime + timeDifference;\n\n        // Validasi minimum duration\n        if (newEndTime - newStartTime < MIN_GAP) {\n          return null; // Invalid timing\n        }\n        return {\n          ...slide,\n          startTime: newStartTime,\n          endTime: newEndTime\n        };\n      }\n      return slide;\n    });\n  };\n\n  // Update slide time dengan auto-shift\n  const updateSlideTime = (slideId, field, value) => {\n    setSlides(slides.map(slide => {\n      if (slide.id === slideId) {\n        if (field === 'text') {\n          return {\n            ...slide,\n            text: value\n          };\n        } else {\n          // Validasi format waktu\n          if (!validateSRTTime(value)) {\n            return slide;\n          }\n          const seconds = timeToSeconds(value);\n\n          // Jika auto-shift enabled dan ini adalah end time\n          if (autoShiftEnabled && field === 'endTime') {\n            const oldEndTime = slide.endTime;\n            const shiftedSlides = autoShiftSubsequentSlides(slideId, seconds, oldEndTime);\n            if (shiftedSlides) {\n              // Update preview\n              const affectedSlides = shiftedSlides.filter((s, i) => i > slides.findIndex(slide => slide.id === slideId));\n              setPreviewChanges({\n                changedSlideId: slideId,\n                newEndTime: seconds,\n                affectedSlides\n              });\n\n              // Update slide saat ini\n              return {\n                ...slide,\n                [field]: seconds\n              };\n            }\n            return slide; // Invalid timing\n          }\n          return {\n            ...slide,\n            [field]: seconds\n          };\n        }\n      }\n      return slide;\n    }));\n  };\n\n  // Apply preview changes\n  const applyPreviewChanges = () => {\n    if (previewChanges) {\n      setSlides(slides.map(slide => {\n        if (previewChanges.affectedSlides.some(s => s.id === slide.id)) {\n          return previewChanges.affectedSlides.find(s => s.id === slide.id);\n        }\n        return slide;\n      }));\n      setPreviewChanges(null);\n    }\n  };\n\n  // Cancel preview changes\n  const cancelPreviewChanges = () => {\n    setPreviewChanges(null);\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = slideId => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    const blob = new Blob([srtContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor(seconds % 1 * 1000);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const [autoShiftEnabled, setAutoShiftEnabled] = useState(true);\n  const [previewChanges, setPreviewChanges] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isFullscreen ? 'fullscreen' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [!isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-title\",\n          children: \"Advanced Slideshow with Custom Timing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Audio File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \"audio/*\",\n                onChange: handleAudioUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRef$current;\n                  return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                },\n                className: \"upload-button audio-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this), \"Choose Audio\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: imageInputRef,\n                type: \"file\",\n                accept: \"image/*\",\n                multiple: true,\n                onChange: handleImagesUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _imageInputRef$curren;\n                  return (_imageInputRef$curren = imageInputRef.current) === null || _imageInputRef$curren === void 0 ? void 0 : _imageInputRef$curren.click();\n                },\n                className: \"upload-button image-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), \"Images (\", images.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload SRT File (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: srtInputRef,\n                type: \"file\",\n                accept: \".srt\",\n                onChange: handleSRTUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _srtInputRef$current;\n                  return (_srtInputRef$current = srtInputRef.current) === null || _srtInputRef$current === void 0 ? void 0 : _srtInputRef$current.click();\n                },\n                className: \"upload-button srt-button\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this), \"SRT Timing\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timing-mode\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'manual' ? 'active' : ''}`,\n              children: \"Manual Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'srt' ? 'active' : ''}`,\n              children: [\"SRT Timing \", srtFile && `(${srtFile})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`,\n          style: {\n            cursor: controlsVisible ? 'default' : 'none'\n          },\n          ref: slideshowRef,\n          onMouseMove: handleMouseMove,\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slideshow-display\",\n            children: images.length > 0 && slides.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_images = images[((_slides$currentSlide = slides[currentSlide]) === null || _slides$currentSlide === void 0 ? void 0 : _slides$currentSlide.imageIndex) || 0]) === null || _images === void 0 ? void 0 : _images.url,\n                alt: `Slide ${currentSlide + 1}`,\n                className: `slide-image ${isFullscreen ? 'fullscreen-image' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-text-container\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"slide-text\",\n                  children: ((_slides$currentSlide2 = slides[currentSlide]) === null || _slides$currentSlide2 === void 0 ? void 0 : _slides$currentSlide2.text) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `slide-counter ${controlsVisible ? 'show' : 'hide'}`,\n                children: [currentSlide + 1, \" / \", slides.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `time-counter ${controlsVisible ? 'show' : 'hide'}`,\n                children: [formatTime(currentTime), \" / \", formatTime(duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleFullscreen,\n                className: `fullscreen-button ${controlsVisible ? 'show' : 'hide'}`,\n                title: isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n                children: isFullscreen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this), isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToPreviousSlide,\n                  className: `nav-button prev-button ${controlsVisible ? 'show' : 'hide'}`,\n                  disabled: currentSlide === 0,\n                  children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToNextSlide,\n                  className: `nav-button next-button ${controlsVisible ? 'show' : 'hide'}`,\n                  disabled: currentSlide === slides.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, currentSlide, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-slideshow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-content\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 48,\n                  className: \"empty-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload audio, images, and set timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), audioFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''} ${controlsVisible ? 'show' : 'hide'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              ref: audioRef,\n              src: audioFile,\n              onLoadedMetadata: handleLoadedMetadata,\n              onTimeUpdate: handleTimeUpdate,\n              onEnded: () => setIsPlaying(false),\n              className: \"hidden-audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-controls-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePlayPause,\n                className: \"play-button\",\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seek-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: duration ? currentTime / duration * 100 : 0,\n                  onChange: handleSeek,\n                  className: \"seek-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-control\",\n                children: [/*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 20,\n                  className: \"volume-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"1\",\n                  step: \"0.1\",\n                  value: volume,\n                  onChange: handleVolumeChange,\n                  className: \"volume-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addSlideAtCurrentTime,\n              disabled: !audioFile,\n              className: \"add-slide-button\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 21\n              }, this), \"Add Slide at \", formatTime(currentTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timing-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"editor-title\",\n              children: \"Timing Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auto-shift-toggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"toggle-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: autoShiftEnabled,\n                    onChange: e => setAutoShiftEnabled(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 23\n                  }, this), \"Auto-Shift\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSlides([]),\n                disabled: slides.length === 0,\n                className: \"clear-button\",\n                children: \"Clear All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: exportToSRT,\n                disabled: slides.length === 0,\n                className: \"export-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 21\n                }, this), \"Export SRT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), previewChanges && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preview-warning\",\n                children: [\"Will shift \", previewChanges.affectedSlides.length, \" slides\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: applyPreviewChanges,\n                  className: \"apply-button\",\n                  children: \"Apply Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelPreviewChanges,\n                  className: \"cancel-button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-timeline\",\n              children: [previewChanges.affectedSlides.slice(0, 3).map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-text\",\n                  children: slide.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-time\",\n                  children: [secondsToTime(slide.startTime), \" \\u2192 \", secondsToTime(slide.endTime)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 25\n                }, this)]\n              }, slide.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 23\n              }, this)), previewChanges.affectedSlides.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-more\",\n                children: [\"+\", previewChanges.affectedSlides.length - 3, \" more slides\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slides-timeline\",\n            children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `slide-item ${index === currentSlide ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-text-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: slide.text,\n                    onChange: e => updateSlideTime(slide.id, 'text', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"Slide text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: secondsToTime(slide.startTime),\n                    onChange: e => updateSlideTime(slide.id, 'startTime', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"HH:MM:SS,mmm\",\n                    pattern: \"\\\\d{2}:\\\\d{2}:\\\\d{2},\\\\d{3}\",\n                    title: \"Format: HH:MM:SS,mmm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: secondsToTime(slide.endTime),\n                    onChange: e => updateSlideTime(slide.id, 'endTime', e.target.value),\n                    className: `timing-input ${autoShiftEnabled ? 'auto-shift-enabled' : ''}`,\n                    placeholder: \"HH:MM:SS,mmm\",\n                    pattern: \"\\\\d{2}:\\\\d{2}:\\\\d{2},\\\\d{3}\",\n                    title: \"Format: HH:MM:SS,mmm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteSlide(slide.id),\n                    className: \"delete-button\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 822,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 21\n              }, this)\n            }, slide.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 19\n            }, this)), slides.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-timeline\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                size: 32,\n                className: \"empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No slides added yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-subtext\",\n                children: \"Upload images and add timing, or use SRT file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"Manual Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Play audio and click \\\"Add Slide at [time]\\\" for each slide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Edit slide text and timing in the editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Export to SRT if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"SRT File Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Create or download SRT subtitle file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload SRT file - timing will be applied automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Fine-tune timing if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"srt-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"example-title\",\n            children: \"SRT Format Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"example-code\",\n            children: `1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedSlideshow, \"s+b3eQJq54H4PuQOBzwwVeVpIJc=\");\n_c = AdvancedSlideshow;\nexport default AdvancedSlideshow;\nvar _c;\n$RefreshReg$(_c, \"AdvancedSlideshow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Play","Pause","Upload","Volume2","Plus","Download","Trash2","Clock","FileText","Maximize2","Minimize2","ChevronLeft","ChevronRight","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvancedSlideshow","_s","_images","_slides$currentSlide","_slides$currentSlide2","audioFile","setAudioFile","images","setImages","currentSlide","setCurrentSlide","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","isFullscreen","setIsFullscreen","controlsVisible","setControlsVisible","hideTimeoutRef","slides","setSlides","srtFile","setSrtFile","timingMode","setTimingMode","audioRef","fileInputRef","imageInputRef","srtInputRef","slideshowRef","handleMouseMove","current","clearTimeout","setTimeout","handleMouseLeave","toggleFullscreen","document","fullscreenElement","requestFullscreen","err","console","error","exitFullscreen","handleFullscreenChange","addEventListener","removeEventListener","handleEscKey","event","key","goToNextSlide","length","goToPreviousSlide","activeSlide","i","startTime","timeToSeconds","timeStr","srtMatch","match","hours","minutes","seconds","milliseconds","parseInt","parts","split","parseFloat","secondsToTime","isNaN","Math","floor","secs","ms","toString","padStart","parseSRT","srtText","blocks","trim","parsedSlides","forEach","block","index","lines","timeLine","textLines","slice","timeMatch","startH","startM","startS","startMs","endH","endM","endS","endMs","endTime","text","join","push","id","Date","now","imageIndex","min","handleSRTUpload","file","target","files","name","endsWith","reader","FileReader","onload","e","result","log","alert","readAsText","value","handleAudioUpload","type","startsWith","url","URL","createObjectURL","handleImagesUpload","Array","from","imageUrls","createDefaultSlides","imageCount","defaultSlides","handleLoadedMetadata","handleTimeUpdate","handlePlayPause","pause","play","handleVolumeChange","newVolume","handleSeek","seekTime","validateSRTTime","srtTimeRegex","test","autoShiftSubsequentSlides","changedSlideId","newEndTime","oldEndTime","timeDifference","changedSlideIndex","findIndex","slide","MIN_GAP","nextSlide","map","newStartTime","updateSlideTime","slideId","field","autoShiftEnabled","shiftedSlides","affectedSlides","filter","s","setPreviewChanges","applyPreviewChanges","previewChanges","some","find","cancelPreviewChanges","addSlideAtCurrentTime","newSlide","updatedSlides","sort","a","b","deleteSlide","exportToSRT","srtContent","formatSRTTime","blob","Blob","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","formatTime","time","setAutoShiftEnabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","onClick","_fileInputRef$current","size","multiple","_imageInputRef$curren","_srtInputRef$current","style","cursor","onMouseMove","onMouseLeave","src","alt","title","disabled","onLoadedMetadata","onTimeUpdate","onEnded","max","step","checked","placeholder","pattern","_c","$RefreshReg$"],"sources":["C:/Users/Smith/Documents/slideshow-music-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight } from 'lucide-react';\nimport './App.css';\n\nconst AdvancedSlideshow = () => {\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const hideTimeoutRef = useRef(null);\n  \n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n  \n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Auto-hide controls handler\n  const handleMouseMove = () => {\n    setControlsVisible(true);\n    \n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n    \n    hideTimeoutRef.current = setTimeout(() => {\n      setControlsVisible(false);\n    }, 2000);\n  };\n\n  const handleMouseLeave = () => {\n    setControlsVisible(false);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Reset controls visibility when exiting fullscreen\n  useEffect(() => {\n    if (!isFullscreen) {\n      setControlsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    }\n  }, [isFullscreen]);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      \n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Convert time string to seconds\n  const timeToSeconds = (timeStr) => {\n    // Handle SRT format: HH:MM:SS,mmm\n    const srtMatch = timeStr.match(/^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/);\n    if (srtMatch) {\n      const [, hours, minutes, seconds, milliseconds] = srtMatch;\n      return parseInt(hours) * 3600 + parseInt(minutes) * 60 + parseInt(seconds) + parseInt(milliseconds) / 1000;\n    }\n    \n    // Handle MM:SS format\n    const parts = timeStr.split(':');\n    if (parts.length === 2) {\n      const minutes = parseInt(parts[0]) || 0;\n      const seconds = parseFloat(parts[1]) || 0;\n      return minutes * 60 + seconds;\n    }\n    \n    return 0;\n  };\n\n  // Convert seconds to time string\n  const secondsToTime = (seconds) => {\n    if (isNaN(seconds)) return '00:00:00,000';\n    \n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor((seconds % 1) * 1000);\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  // Parse SRT file\n  const parseSRT = (srtText) => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n        \n        // Parse time format: 00:00:10,500 --> 00:00:13,240\n        const timeMatch = timeLine.match(/^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/);\n        \n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          \n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n          \n          // Combine all text lines\n          const text = textLines.join('\\n').trim();\n          \n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n\n    return parsedSlides;\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const srtText = e.target.result;\n        console.log('SRT content:', srtText);\n        \n        const parsedSlides = parseSRT(srtText);\n        console.log('Parsed slides:', parsedSlides);\n        \n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Handle audio file upload\n  const handleAudioUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    \n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({ url, name: file.name });\n      }\n    });\n    \n    setImages(imageUrls);\n    setCurrentSlide(0);\n    \n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    \n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = (imageCount) => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10, // Default 10 seconds per slide\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const handleSeek = (e) => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = (e.target.value / 100) * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Validasi format waktu SRT\n  const validateSRTTime = (timeStr) => {\n    const srtTimeRegex = /^(\\d{2}):(\\d{2}):(\\d{2}),(\\d{3})$/;\n    return srtTimeRegex.test(timeStr);\n  };\n\n  // Auto-shift logic\n  const autoShiftSubsequentSlides = (changedSlideId, newEndTime, oldEndTime) => {\n    const timeDifference = newEndTime - oldEndTime;\n    const changedSlideIndex = slides.findIndex(slide => slide.id === changedSlideId);\n    \n    // Validasi minimum gap\n    const MIN_GAP = 0.1;\n    const nextSlide = slides[changedSlideIndex + 1];\n    if (nextSlide && (newEndTime + MIN_GAP) > nextSlide.startTime) {\n      return null; // Invalid timing\n    }\n\n    return slides.map((slide, index) => {\n      if (index > changedSlideIndex) {\n        const newStartTime = slide.startTime + timeDifference;\n        const newEndTime = slide.endTime + timeDifference;\n        \n        // Validasi minimum duration\n        if (newEndTime - newStartTime < MIN_GAP) {\n          return null; // Invalid timing\n        }\n        \n        return {\n          ...slide,\n          startTime: newStartTime,\n          endTime: newEndTime\n        };\n      }\n      return slide;\n    });\n  };\n\n  // Update slide time dengan auto-shift\n  const updateSlideTime = (slideId, field, value) => {\n    setSlides(slides.map(slide => {\n      if (slide.id === slideId) {\n        if (field === 'text') {\n          return { ...slide, text: value };\n        } else {\n          // Validasi format waktu\n          if (!validateSRTTime(value)) {\n            return slide;\n          }\n          const seconds = timeToSeconds(value);\n          \n          // Jika auto-shift enabled dan ini adalah end time\n          if (autoShiftEnabled && field === 'endTime') {\n            const oldEndTime = slide.endTime;\n            const shiftedSlides = autoShiftSubsequentSlides(slideId, seconds, oldEndTime);\n            \n            if (shiftedSlides) {\n              // Update preview\n              const affectedSlides = shiftedSlides.filter((s, i) => i > slides.findIndex(slide => slide.id === slideId));\n              setPreviewChanges({\n                changedSlideId: slideId,\n                newEndTime: seconds,\n                affectedSlides\n              });\n              \n              // Update slide saat ini\n              return { ...slide, [field]: seconds };\n            }\n            return slide; // Invalid timing\n          }\n          \n          return { ...slide, [field]: seconds };\n        }\n      }\n      return slide;\n    }));\n  };\n\n  // Apply preview changes\n  const applyPreviewChanges = () => {\n    if (previewChanges) {\n      setSlides(slides.map(slide => {\n        if (previewChanges.affectedSlides.some(s => s.id === slide.id)) {\n          return previewChanges.affectedSlides.find(s => s.id === slide.id);\n        }\n        return slide;\n      }));\n      setPreviewChanges(null);\n    }\n  };\n\n  // Cancel preview changes\n  const cancelPreviewChanges = () => {\n    setPreviewChanges(null);\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    \n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = (slideId) => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      \n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    \n    const blob = new Blob([srtContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor((seconds % 1) * 1000);\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  const formatTime = (time) => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const [autoShiftEnabled, setAutoShiftEnabled] = useState(true);\n  const [previewChanges, setPreviewChanges] = useState(null);\n\n  return (\n    <div className={`app-container ${isFullscreen ? 'fullscreen' : ''}`}>\n      <div className=\"app-content\">\n        {!isFullscreen && (\n          <>\n            <h1 className=\"app-title\">\n              Advanced Slideshow with Custom Timing\n            </h1>\n            \n            {/* Upload Section */}\n            <div className=\"upload-section\">\n              <div className=\"upload-grid\">\n                <div>\n                  <label className=\"upload-label\">\n                    Upload Audio File\n                  </label>\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    onChange={handleAudioUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-button audio-button\"\n                  >\n                    <Upload size={20} />\n                    Choose Audio\n                  </button>\n                </div>\n                \n                <div>\n                  <label className=\"upload-label\">\n                    Upload Images\n                  </label>\n                  <input\n                    ref={imageInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImagesUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => imageInputRef.current?.click()}\n                    className=\"upload-button image-button\"\n                  >\n                    <Upload size={20} />\n                    Images ({images.length})\n                  </button>\n                </div>\n\n                <div>\n                  <label className=\"upload-label\">\n                    Upload SRT File (Optional)\n                  </label>\n                  <input\n                    ref={srtInputRef}\n                    type=\"file\"\n                    accept=\".srt\"\n                    onChange={handleSRTUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => srtInputRef.current?.click()}\n                    className=\"upload-button srt-button\"\n                  >\n                    <FileText size={20} />\n                    SRT Timing\n                  </button>\n                </div>\n              </div>\n\n              {/* Timing Mode Indicator */}\n              <div className=\"timing-mode\">\n                <div className={`mode-indicator ${timingMode === 'manual' ? 'active' : ''}`}>\n                  Manual Timing\n                </div>\n                <div className={`mode-indicator ${timingMode === 'srt' ? 'active' : ''}`}>\n                  SRT Timing {srtFile && `(${srtFile})`}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className={`main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`}>\n          {/* Slideshow Display */}\n          <div \n            className={`slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`}\n            style={{ cursor: controlsVisible ? 'default' : 'none' }}\n            ref={slideshowRef}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n          >\n            <div className=\"slideshow-display\">\n              {images.length > 0 && slides.length > 0 ? (\n                <div className=\"slide-content\" key={currentSlide}>\n                  <img\n                    src={images[slides[currentSlide]?.imageIndex || 0]?.url}\n                    alt={`Slide ${currentSlide + 1}`}\n                    className={`slide-image ${isFullscreen ? 'fullscreen-image' : ''}`}\n                  />\n                  <div className=\"slide-text-container\">\n                    <p className=\"slide-text\">\n                      {slides[currentSlide]?.text || ''}\n                    </p>\n                  </div>\n                  <div className={`slide-counter ${controlsVisible ? 'show' : 'hide'}`}>\n                    {currentSlide + 1} / {slides.length}\n                  </div>\n                  <div className={`time-counter ${controlsVisible ? 'show' : 'hide'}`}>\n                    {formatTime(currentTime)} / {formatTime(duration)}\n                  </div>\n                  \n                  {/* Fullscreen Controls */}\n                  <button\n                    onClick={toggleFullscreen}\n                    className={`fullscreen-button ${controlsVisible ? 'show' : 'hide'}`}\n                    title={isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\n                  >\n                    {isFullscreen ? <Minimize2 size={24} /> : <Maximize2 size={24} />}\n                  </button>\n\n                  {/* Navigation Controls */}\n                  {isFullscreen && (\n                    <>\n                      <button\n                        onClick={goToPreviousSlide}\n                        className={`nav-button prev-button ${controlsVisible ? 'show' : 'hide'}`}\n                        disabled={currentSlide === 0}\n                      >\n                        <ChevronLeft size={32} />\n                      </button>\n                      <button\n                        onClick={goToNextSlide}\n                        className={`nav-button next-button ${controlsVisible ? 'show' : 'hide'}`}\n                        disabled={currentSlide === slides.length - 1}\n                      >\n                        <ChevronRight size={32} />\n                      </button>\n                    </>\n                  )}\n                </div>\n              ) : (\n                <div className=\"empty-slideshow\">\n                  <div className=\"empty-content\">\n                    <Upload size={48} className=\"empty-icon\" />\n                    <p>Upload audio, images, and set timing</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Audio Controls */}\n            {audioFile && (\n              <div className={`audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''} ${controlsVisible ? 'show' : 'hide'}`}>\n                <audio\n                  ref={audioRef}\n                  src={audioFile}\n                  onLoadedMetadata={handleLoadedMetadata}\n                  onTimeUpdate={handleTimeUpdate}\n                  onEnded={() => setIsPlaying(false)}\n                  className=\"hidden-audio\"\n                />\n                \n                <div className=\"audio-controls-grid\">\n                  <button\n                    onClick={handlePlayPause}\n                    className=\"play-button\"\n                  >\n                    {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                  </button>\n                  \n                  <div className=\"seek-container\">\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={duration ? (currentTime / duration) * 100 : 0}\n                      onChange={handleSeek}\n                      className=\"seek-slider\"\n                    />\n                  </div>\n                  \n                  <div className=\"volume-control\">\n                    <Volume2 size={20} className=\"volume-icon\" />\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={volume}\n                      onChange={handleVolumeChange}\n                      className=\"volume-slider\"\n                    />\n                  </div>\n                </div>\n                \n                {!isFullscreen && (\n                  <button\n                    onClick={addSlideAtCurrentTime}\n                    disabled={!audioFile}\n                    className=\"add-slide-button\"\n                  >\n                    <Plus size={16} />\n                    Add Slide at {formatTime(currentTime)}\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Timing Editor - Hidden in fullscreen */}\n          {!isFullscreen && (\n            <div className=\"timing-editor\">\n              <div className=\"editor-header\">\n                <h3 className=\"editor-title\">Timing Editor</h3>\n                <div className=\"editor-actions\">\n                  <div className=\"auto-shift-toggle\">\n                    <label className=\"toggle-label\">\n                      <input\n                        type=\"checkbox\"\n                        checked={autoShiftEnabled}\n                        onChange={(e) => setAutoShiftEnabled(e.target.checked)}\n                      />\n                      Auto-Shift\n                    </label>\n                  </div>\n                  <button\n                    onClick={() => setSlides([])}\n                    disabled={slides.length === 0}\n                    className=\"clear-button\"\n                  >\n                    Clear All\n                  </button>\n                  <button\n                    onClick={exportToSRT}\n                    disabled={slides.length === 0}\n                    className=\"export-button\"\n                  >\n                    <Download size={14} />\n                    Export SRT\n                  </button>\n                </div>\n              </div>\n\n              {/* Preview Changes Panel */}\n              {previewChanges && (\n                <div className=\"preview-panel\">\n                  <div className=\"preview-header\">\n                    <span className=\"preview-warning\">\n                      Will shift {previewChanges.affectedSlides.length} slides\n                    </span>\n                    <div className=\"preview-actions\">\n                      <button onClick={applyPreviewChanges} className=\"apply-button\">\n                        Apply Changes\n                      </button>\n                      <button onClick={cancelPreviewChanges} className=\"cancel-button\">\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"preview-timeline\">\n                    {previewChanges.affectedSlides.slice(0, 3).map((slide, index) => (\n                      <div key={slide.id} className=\"preview-item\">\n                        <span className=\"preview-text\">{slide.text}</span>\n                        <span className=\"preview-time\">\n                          {secondsToTime(slide.startTime)} → {secondsToTime(slide.endTime)}\n                        </span>\n                      </div>\n                    ))}\n                    {previewChanges.affectedSlides.length > 3 && (\n                      <div className=\"preview-more\">\n                        +{previewChanges.affectedSlides.length - 3} more slides\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Slides Timeline */}\n              <div className=\"slides-timeline\">\n                {slides.map((slide, index) => (\n                  <div\n                    key={slide.id}\n                    className={`slide-item ${index === currentSlide ? 'active' : ''}`}\n                  >\n                    <div className=\"slide-grid\">\n                      <div className=\"slide-text-input\">\n                        <input\n                          type=\"text\"\n                          value={slide.text}\n                          onChange={(e) => updateSlideTime(slide.id, 'text', e.target.value)}\n                          className=\"timing-input\"\n                          placeholder=\"Slide text\"\n                        />\n                      </div>\n                      <div className=\"slide-time-input\">\n                        <input\n                          type=\"text\"\n                          value={secondsToTime(slide.startTime)}\n                          onChange={(e) => updateSlideTime(slide.id, 'startTime', e.target.value)}\n                          className=\"timing-input\"\n                          placeholder=\"HH:MM:SS,mmm\"\n                          pattern=\"\\d{2}:\\d{2}:\\d{2},\\d{3}\"\n                          title=\"Format: HH:MM:SS,mmm\"\n                        />\n                      </div>\n                      <div className=\"slide-time-input\">\n                        <input\n                          type=\"text\"\n                          value={secondsToTime(slide.endTime)}\n                          onChange={(e) => updateSlideTime(slide.id, 'endTime', e.target.value)}\n                          className={`timing-input ${autoShiftEnabled ? 'auto-shift-enabled' : ''}`}\n                          placeholder=\"HH:MM:SS,mmm\"\n                          pattern=\"\\d{2}:\\d{2}:\\d{2},\\d{3}\"\n                          title=\"Format: HH:MM:SS,mmm\"\n                        />\n                      </div>\n                      <div className=\"slide-actions\">\n                        <button\n                          onClick={() => deleteSlide(slide.id)}\n                          className=\"delete-button\"\n                        >\n                          <Trash2 size={14} />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                \n                {slides.length === 0 && (\n                  <div className=\"empty-timeline\">\n                    <Clock size={32} className=\"empty-icon\" />\n                    <p>No slides added yet</p>\n                    <p className=\"empty-subtext\">Upload images and add timing, or use SRT file</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Instructions - Hidden in fullscreen */}\n        {!isFullscreen && (\n          <div className=\"instructions-section\">\n            <div className=\"instructions-grid\">\n              <div>\n                <h3 className=\"instructions-title\">Manual Timing:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Upload audio and images</li>\n                  <li>Play audio and click \"Add Slide at [time]\" for each slide</li>\n                  <li>Edit slide text and timing in the editor</li>\n                  <li>Export to SRT if needed</li>\n                </ol>\n              </div>\n              <div>\n                <h3 className=\"instructions-title\">SRT File Method:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Create or download SRT subtitle file</li>\n                  <li>Upload audio and images</li>\n                  <li>Upload SRT file - timing will be applied automatically</li>\n                  <li>Fine-tune timing if needed</li>\n                </ol>\n              </div>\n            </div>\n            \n            <div className=\"srt-example\">\n              <h4 className=\"example-title\">SRT Format Example:</h4>\n              <pre className=\"example-code\">\n{`1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`}\n              </pre>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSlideshow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}