{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smith\\\\Documents\\\\slideshow-music-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight, Pencil, Check } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvancedSlideshow = () => {\n  _s();\n  var _images, _slides$currentSlide, _slides$currentSlide2;\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const hideTimeoutRef = useRef(null);\n\n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n\n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Auto-hide controls handler\n  const handleMouseMove = () => {\n    setControlsVisible(true);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n    hideTimeoutRef.current = setTimeout(() => {\n      setControlsVisible(false);\n    }, 2000);\n  };\n  const handleMouseLeave = () => {\n    setControlsVisible(false);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Reset controls visibility when exiting fullscreen\n  useEffect(() => {\n    if (!isFullscreen) {\n      setControlsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    }\n  }, [isFullscreen]);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = event => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Auto-shift logic\n  const autoShiftSubsequentSlides = (changedSlideId, newEndTime, oldEndTime) => {\n    const timeDifference = newEndTime - oldEndTime;\n    const changedSlideIndex = slides.findIndex(slide => slide.id === changedSlideId);\n\n    // Validasi minimum gap\n    const MIN_GAP = 0.1;\n    const nextSlide = slides[changedSlideIndex + 1];\n    if (nextSlide && newEndTime + MIN_GAP > nextSlide.startTime) {\n      return null; // Invalid timing\n    }\n    return slides.map((slide, index) => {\n      if (index > changedSlideIndex) {\n        const newStartTime = slide.startTime + timeDifference;\n        const newEndTime = slide.endTime + timeDifference;\n\n        // Validasi minimum duration\n        if (newEndTime - newStartTime < MIN_GAP) {\n          return null; // Invalid timing\n        }\n        return {\n          ...slide,\n          startTime: newStartTime,\n          endTime: newEndTime\n        };\n      }\n      return slide;\n    });\n  };\n\n  // Auto-shift logic\n  const autoShiftEnabled = true;\n  const [previewChanges, setPreviewChanges] = useState(null);\n  const [editingSlideId, setEditingSlideId] = useState(null);\n\n  // Format seconds to display string\n  const formatSeconds = seconds => {\n    return `${seconds.toFixed(1)}s`;\n  };\n\n  // Quick time adjustment\n  const adjustTime = (slideId, field, adjustment) => {\n    setSlides(slides.map(slide => {\n      if (slide.id === slideId) {\n        const newTime = slide[field] + adjustment;\n        if (newTime < 0) return slide; // Prevent negative times\n\n        if (autoShiftEnabled && field === 'endTime') {\n          const shiftedSlides = autoShiftSubsequentSlides(slideId, newTime, slide.endTime);\n          if (shiftedSlides) {\n            setPreviewChanges({\n              changedSlideId: slideId,\n              newEndTime: newTime,\n              affectedSlides: shiftedSlides.filter((s, i) => i > slides.findIndex(slide => slide.id === slideId))\n            });\n          } else {\n            return slide; // Invalid timing\n          }\n        }\n        return {\n          ...slide,\n          [field]: newTime\n        };\n      }\n      return slide;\n    }));\n  };\n\n  // Update slide time with seconds\n  const updateSlideTime = (slideId, field, value) => {\n    const seconds = parseFloat(value);\n    if (isNaN(seconds) || seconds < 0) return;\n    setSlides(slides.map(slide => {\n      if (slide.id === slideId) {\n        if (field === 'text') {\n          return {\n            ...slide,\n            text: value\n          };\n        }\n        if (autoShiftEnabled && field === 'endTime') {\n          const shiftedSlides = autoShiftSubsequentSlides(slideId, seconds, slide.endTime);\n          if (shiftedSlides) {\n            setPreviewChanges({\n              changedSlideId: slideId,\n              newEndTime: seconds,\n              affectedSlides: shiftedSlides.filter((s, i) => i > slides.findIndex(slide => slide.id === slideId))\n            });\n          } else {\n            return slide; // Invalid timing\n          }\n        }\n        return {\n          ...slide,\n          [field]: seconds\n        };\n      }\n      return slide;\n    }));\n  };\n\n  // Apply preview changes\n  const applyPreviewChanges = () => {\n    if (previewChanges) {\n      setSlides(slides.map(slide => {\n        if (previewChanges.affectedSlides.some(s => s.id === slide.id)) {\n          return previewChanges.affectedSlides.find(s => s.id === slide.id);\n        }\n        return slide;\n      }));\n      setPreviewChanges(null);\n    }\n  };\n\n  // Cancel preview changes\n  const cancelPreviewChanges = () => {\n    setPreviewChanges(null);\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = slideId => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    const blob = new Blob([srtContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor(seconds % 1 * 1000);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isFullscreen ? 'fullscreen' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [!isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-title\",\n          children: \"Advanced Slideshow with Custom Timing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Audio File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \"audio/*\",\n                onChange: handleAudioUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRef$current;\n                  return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                },\n                className: \"upload-button audio-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), \"Choose Audio\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: imageInputRef,\n                type: \"file\",\n                accept: \"image/*\",\n                multiple: true,\n                onChange: handleImagesUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _imageInputRef$curren;\n                  return (_imageInputRef$curren = imageInputRef.current) === null || _imageInputRef$curren === void 0 ? void 0 : _imageInputRef$curren.click();\n                },\n                className: \"upload-button image-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this), \"Images (\", images.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload SRT File (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: srtInputRef,\n                type: \"file\",\n                accept: \".srt\",\n                onChange: handleSRTUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _srtInputRef$current;\n                  return (_srtInputRef$current = srtInputRef.current) === null || _srtInputRef$current === void 0 ? void 0 : _srtInputRef$current.click();\n                },\n                className: \"upload-button srt-button\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), \"SRT Timing\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timing-mode\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'manual' ? 'active' : ''}`,\n              children: \"Manual Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'srt' ? 'active' : ''}`,\n              children: [\"SRT Timing \", srtFile && `(${srtFile})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`,\n          style: {\n            cursor: controlsVisible ? 'default' : 'none'\n          },\n          ref: slideshowRef,\n          onMouseMove: handleMouseMove,\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slideshow-display\",\n            children: images.length > 0 && slides.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_images = images[((_slides$currentSlide = slides[currentSlide]) === null || _slides$currentSlide === void 0 ? void 0 : _slides$currentSlide.imageIndex) || 0]) === null || _images === void 0 ? void 0 : _images.url,\n                alt: `Slide ${currentSlide + 1}`,\n                className: `slide-image ${isFullscreen ? 'fullscreen-image' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-text-container\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"slide-text\",\n                  children: ((_slides$currentSlide2 = slides[currentSlide]) === null || _slides$currentSlide2 === void 0 ? void 0 : _slides$currentSlide2.text) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `slide-counter ${controlsVisible ? 'show' : 'hide'}`,\n                children: [currentSlide + 1, \" / \", slides.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `time-counter ${controlsVisible ? 'show' : 'hide'}`,\n                children: [formatTime(currentTime), \" / \", formatTime(duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleFullscreen,\n                className: `fullscreen-button ${controlsVisible ? 'show' : 'hide'}`,\n                title: isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n                children: isFullscreen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this), isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToPreviousSlide,\n                  className: `nav-button prev-button ${controlsVisible ? 'show' : 'hide'}`,\n                  disabled: currentSlide === 0,\n                  children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToNextSlide,\n                  className: `nav-button next-button ${controlsVisible ? 'show' : 'hide'}`,\n                  disabled: currentSlide === slides.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, currentSlide, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-slideshow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-content\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 48,\n                  className: \"empty-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload audio, images, and set timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), audioFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''} ${controlsVisible ? 'show' : 'hide'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              ref: audioRef,\n              src: audioFile,\n              onLoadedMetadata: handleLoadedMetadata,\n              onTimeUpdate: handleTimeUpdate,\n              onEnded: () => setIsPlaying(false),\n              className: \"hidden-audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-controls-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePlayPause,\n                className: \"play-button\",\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seek-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: duration ? currentTime / duration * 100 : 0,\n                  onChange: handleSeek,\n                  className: \"seek-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-control\",\n                children: [/*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 20,\n                  className: \"volume-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"1\",\n                  step: \"0.1\",\n                  value: volume,\n                  onChange: handleVolumeChange,\n                  className: \"volume-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addSlideAtCurrentTime,\n              disabled: !audioFile,\n              className: \"add-slide-button\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 21\n              }, this), \"Add Slide at \", formatTime(currentTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timing-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-title-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"editor-title\",\n                children: \"Timing Editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auto-shift-toggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"toggle-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: autoShiftEnabled,\n                    onChange: e => setAutoShiftEnabled(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"toggle-text\",\n                    children: \"Auto-Shift\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `toggle-status ${autoShiftEnabled ? 'enabled' : 'disabled'}`,\n                    children: autoShiftEnabled ? 'ON' : 'OFF'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSlides([]),\n                disabled: slides.length === 0,\n                className: \"clear-button\",\n                children: \"Clear All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: exportToSRT,\n                disabled: slides.length === 0,\n                className: \"export-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), \"Export SRT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), previewChanges && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preview-warning\",\n                children: [\"Will shift \", previewChanges.affectedSlides.length, \" slides\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: applyPreviewChanges,\n                  className: \"apply-button\",\n                  children: \"Apply Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelPreviewChanges,\n                  className: \"cancel-button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-timeline\",\n              children: [previewChanges.affectedSlides.slice(0, 3).map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-text\",\n                  children: slide.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-time\",\n                  children: [formatSeconds(slide.startTime), \" \\u2192 \", formatSeconds(slide.endTime)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 25\n                }, this)]\n              }, slide.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 23\n              }, this)), previewChanges.affectedSlides.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-more\",\n                children: [\"+\", previewChanges.affectedSlides.length - 3, \" more slides\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slides-timeline\",\n            children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `slide-item ${index === currentSlide ? 'active' : ''} ${editingSlideId === slide.id ? 'editing' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-text-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: slide.text,\n                    onChange: e => updateSlideTime(slide.id, 'text', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"Slide text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-display\",\n                  children: editingSlideId === slide.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time-editor\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"time-inputs\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"time-input-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"Start\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 627,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          value: slide.startTime,\n                          onChange: e => updateSlideTime(slide.id, 'startTime', e.target.value),\n                          step: \"0.1\",\n                          min: \"0\",\n                          className: \"timing-input\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 628,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"quick-adjust\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', -1),\n                            children: \"-1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 637,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', -0.5),\n                            children: \"-0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 638,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', 0.5),\n                            children: \"+0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 639,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'startTime', 1),\n                            children: \"+1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 640,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 636,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 626,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"time-input-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"End\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 644,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          value: slide.endTime,\n                          onChange: e => updateSlideTime(slide.id, 'endTime', e.target.value),\n                          step: \"0.1\",\n                          min: \"0\",\n                          className: `timing-input ${autoShiftEnabled ? 'auto-shift-enabled' : ''}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 645,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"quick-adjust\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', -1),\n                            children: \"-1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 654,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', -0.5),\n                            children: \"-0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 655,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', 0.5),\n                            children: \"+0.5s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 656,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => adjustTime(slide.id, 'endTime', 1),\n                            children: \"+1s\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 657,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 653,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timeline-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"timeline-progress\",\n                        style: {\n                          left: `${slide.startTime / duration * 100}%`,\n                          width: `${(slide.endTime - slide.startTime) / duration * 100}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 662,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time-display\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [formatSeconds(slide.startTime), \" \\u2192 \", formatSeconds(slide.endTime)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setEditingSlideId(slide.id),\n                      className: \"edit-button\",\n                      children: /*#__PURE__*/_jsxDEV(Pencil, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 675,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-actions\",\n                  children: editingSlideId === slide.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setEditingSlideId(null),\n                    className: \"check-button\",\n                    children: /*#__PURE__*/_jsxDEV(Check, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteSlide(slide.id),\n                    className: \"delete-button\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this)\n            }, slide.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this)), slides.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-timeline\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                size: 32,\n                className: \"empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No slides added yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-subtext\",\n                children: \"Upload images and add timing, or use SRT file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"Manual Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Play audio and click \\\"Add Slide at [time]\\\" for each slide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Edit slide text and timing in the editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Export to SRT if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"SRT File Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Create or download SRT subtitle file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload SRT file - timing will be applied automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Fine-tune timing if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"srt-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"example-title\",\n            children: \"SRT Format Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"example-code\",\n            children: `1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedSlideshow, \"sI6cUxAutlNtwCgq89AN8h3M9Yk=\");\n_c = AdvancedSlideshow;\nexport default AdvancedSlideshow;\nvar _c;\n$RefreshReg$(_c, \"AdvancedSlideshow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Play","Pause","Upload","Volume2","Plus","Download","Trash2","Clock","FileText","Maximize2","Minimize2","ChevronLeft","ChevronRight","Pencil","Check","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvancedSlideshow","_s","_images","_slides$currentSlide","_slides$currentSlide2","audioFile","setAudioFile","images","setImages","currentSlide","setCurrentSlide","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","isFullscreen","setIsFullscreen","controlsVisible","setControlsVisible","hideTimeoutRef","slides","setSlides","srtFile","setSrtFile","timingMode","setTimingMode","audioRef","fileInputRef","imageInputRef","srtInputRef","slideshowRef","handleMouseMove","current","clearTimeout","setTimeout","handleMouseLeave","toggleFullscreen","document","fullscreenElement","requestFullscreen","err","console","error","exitFullscreen","handleFullscreenChange","addEventListener","removeEventListener","handleEscKey","event","key","goToNextSlide","length","goToPreviousSlide","activeSlide","i","startTime","autoShiftSubsequentSlides","changedSlideId","newEndTime","oldEndTime","timeDifference","changedSlideIndex","findIndex","slide","id","MIN_GAP","nextSlide","map","index","newStartTime","endTime","autoShiftEnabled","previewChanges","setPreviewChanges","editingSlideId","setEditingSlideId","formatSeconds","seconds","toFixed","adjustTime","slideId","field","adjustment","newTime","shiftedSlides","affectedSlides","filter","s","updateSlideTime","value","parseFloat","isNaN","text","applyPreviewChanges","some","find","cancelPreviewChanges","addSlideAtCurrentTime","newSlide","Date","now","imageIndex","Math","min","updatedSlides","sort","a","b","deleteSlide","exportToSRT","srtContent","forEach","formatSRTTime","blob","Blob","type","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","hours","floor","minutes","secs","ms","toString","padStart","formatTime","time","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","handleAudioUpload","onClick","_fileInputRef$current","size","multiple","handleImagesUpload","_imageInputRef$curren","handleSRTUpload","_srtInputRef$current","style","cursor","onMouseMove","onMouseLeave","src","alt","title","disabled","onLoadedMetadata","handleLoadedMetadata","onTimeUpdate","handleTimeUpdate","onEnded","handlePlayPause","max","handleSeek","step","handleVolumeChange","checked","e","setAutoShiftEnabled","target","slice","placeholder","left","width","_c","$RefreshReg$"],"sources":["C:/Users/Smith/Documents/slideshow-music-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight, Pencil, Check } from 'lucide-react';\nimport './App.css';\n\nconst AdvancedSlideshow = () => {\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const hideTimeoutRef = useRef(null);\n  \n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n  \n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Auto-hide controls handler\n  const handleMouseMove = () => {\n    setControlsVisible(true);\n    \n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n    \n    hideTimeoutRef.current = setTimeout(() => {\n      setControlsVisible(false);\n    }, 2000);\n  };\n\n  const handleMouseLeave = () => {\n    setControlsVisible(false);\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Reset controls visibility when exiting fullscreen\n  useEffect(() => {\n    if (!isFullscreen) {\n      setControlsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    }\n  }, [isFullscreen]);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      \n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Auto-shift logic\n  const autoShiftSubsequentSlides = (changedSlideId, newEndTime, oldEndTime) => {\n    const timeDifference = newEndTime - oldEndTime;\n    const changedSlideIndex = slides.findIndex(slide => slide.id === changedSlideId);\n    \n    // Validasi minimum gap\n    const MIN_GAP = 0.1;\n    const nextSlide = slides[changedSlideIndex + 1];\n    if (nextSlide && (newEndTime + MIN_GAP) > nextSlide.startTime) {\n      return null; // Invalid timing\n    }\n\n    return slides.map((slide, index) => {\n      if (index > changedSlideIndex) {\n        const newStartTime = slide.startTime + timeDifference;\n        const newEndTime = slide.endTime + timeDifference;\n        \n        // Validasi minimum duration\n        if (newEndTime - newStartTime < MIN_GAP) {\n          return null; // Invalid timing\n        }\n        \n        return {\n          ...slide,\n          startTime: newStartTime,\n          endTime: newEndTime\n        };\n      }\n      return slide;\n    });\n  };\n\n  // Auto-shift logic\n  const autoShiftEnabled = true;\n  const [previewChanges, setPreviewChanges] = useState(null);\n  const [editingSlideId, setEditingSlideId] = useState(null);\n\n  // Format seconds to display string\n  const formatSeconds = (seconds) => {\n    return `${seconds.toFixed(1)}s`;\n  };\n\n  // Quick time adjustment\n  const adjustTime = (slideId, field, adjustment) => {\n    setSlides(slides.map(slide => {\n      if (slide.id === slideId) {\n        const newTime = slide[field] + adjustment;\n        if (newTime < 0) return slide; // Prevent negative times\n        \n        if (autoShiftEnabled && field === 'endTime') {\n          const shiftedSlides = autoShiftSubsequentSlides(slideId, newTime, slide.endTime);\n          if (shiftedSlides) {\n            setPreviewChanges({\n              changedSlideId: slideId,\n              newEndTime: newTime,\n              affectedSlides: shiftedSlides.filter((s, i) => i > slides.findIndex(slide => slide.id === slideId))\n            });\n          } else {\n            return slide; // Invalid timing\n          }\n        }\n        \n        return { ...slide, [field]: newTime };\n      }\n      return slide;\n    }));\n  };\n\n  // Update slide time with seconds\n  const updateSlideTime = (slideId, field, value) => {\n    const seconds = parseFloat(value);\n    if (isNaN(seconds) || seconds < 0) return;\n\n    setSlides(slides.map(slide => {\n      if (slide.id === slideId) {\n        if (field === 'text') {\n          return { ...slide, text: value };\n        }\n        \n        if (autoShiftEnabled && field === 'endTime') {\n          const shiftedSlides = autoShiftSubsequentSlides(slideId, seconds, slide.endTime);\n          if (shiftedSlides) {\n            setPreviewChanges({\n              changedSlideId: slideId,\n              newEndTime: seconds,\n              affectedSlides: shiftedSlides.filter((s, i) => i > slides.findIndex(slide => slide.id === slideId))\n            });\n          } else {\n            return slide; // Invalid timing\n          }\n        }\n        \n        return { ...slide, [field]: seconds };\n      }\n      return slide;\n    }));\n  };\n\n  // Apply preview changes\n  const applyPreviewChanges = () => {\n    if (previewChanges) {\n      setSlides(slides.map(slide => {\n        if (previewChanges.affectedSlides.some(s => s.id === slide.id)) {\n          return previewChanges.affectedSlides.find(s => s.id === slide.id);\n        }\n        return slide;\n      }));\n      setPreviewChanges(null);\n    }\n  };\n\n  // Cancel preview changes\n  const cancelPreviewChanges = () => {\n    setPreviewChanges(null);\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    \n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = (slideId) => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      \n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    \n    const blob = new Blob([srtContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor((seconds % 1) * 1000);\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  const formatTime = (time) => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className={`app-container ${isFullscreen ? 'fullscreen' : ''}`}>\n      <div className=\"app-content\">\n        {!isFullscreen && (\n          <>\n            <h1 className=\"app-title\">\n              Advanced Slideshow with Custom Timing\n            </h1>\n            \n            {/* Upload Section */}\n            <div className=\"upload-section\">\n              <div className=\"upload-grid\">\n                <div>\n                  <label className=\"upload-label\">\n                    Upload Audio File\n                  </label>\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    onChange={handleAudioUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-button audio-button\"\n                  >\n                    <Upload size={20} />\n                    Choose Audio\n                  </button>\n                </div>\n                \n                <div>\n                  <label className=\"upload-label\">\n                    Upload Images\n                  </label>\n                  <input\n                    ref={imageInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImagesUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => imageInputRef.current?.click()}\n                    className=\"upload-button image-button\"\n                  >\n                    <Upload size={20} />\n                    Images ({images.length})\n                  </button>\n                </div>\n\n                <div>\n                  <label className=\"upload-label\">\n                    Upload SRT File (Optional)\n                  </label>\n                  <input\n                    ref={srtInputRef}\n                    type=\"file\"\n                    accept=\".srt\"\n                    onChange={handleSRTUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => srtInputRef.current?.click()}\n                    className=\"upload-button srt-button\"\n                  >\n                    <FileText size={20} />\n                    SRT Timing\n                  </button>\n                </div>\n              </div>\n\n              {/* Timing Mode Indicator */}\n              <div className=\"timing-mode\">\n                <div className={`mode-indicator ${timingMode === 'manual' ? 'active' : ''}`}>\n                  Manual Timing\n                </div>\n                <div className={`mode-indicator ${timingMode === 'srt' ? 'active' : ''}`}>\n                  SRT Timing {srtFile && `(${srtFile})`}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className={`main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`}>\n          {/* Slideshow Display */}\n          <div \n            className={`slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`}\n            style={{ cursor: controlsVisible ? 'default' : 'none' }}\n            ref={slideshowRef}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n          >\n            <div className=\"slideshow-display\">\n              {images.length > 0 && slides.length > 0 ? (\n                <div className=\"slide-content\" key={currentSlide}>\n                  <img\n                    src={images[slides[currentSlide]?.imageIndex || 0]?.url}\n                    alt={`Slide ${currentSlide + 1}`}\n                    className={`slide-image ${isFullscreen ? 'fullscreen-image' : ''}`}\n                  />\n                  <div className=\"slide-text-container\">\n                    <p className=\"slide-text\">\n                      {slides[currentSlide]?.text || ''}\n                    </p>\n                  </div>\n                  <div className={`slide-counter ${controlsVisible ? 'show' : 'hide'}`}>\n                    {currentSlide + 1} / {slides.length}\n                  </div>\n                  <div className={`time-counter ${controlsVisible ? 'show' : 'hide'}`}>\n                    {formatTime(currentTime)} / {formatTime(duration)}\n                  </div>\n                  \n                  {/* Fullscreen Controls */}\n                  <button\n                    onClick={toggleFullscreen}\n                    className={`fullscreen-button ${controlsVisible ? 'show' : 'hide'}`}\n                    title={isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\n                  >\n                    {isFullscreen ? <Minimize2 size={24} /> : <Maximize2 size={24} />}\n                  </button>\n\n                  {/* Navigation Controls */}\n                  {isFullscreen && (\n                    <>\n                      <button\n                        onClick={goToPreviousSlide}\n                        className={`nav-button prev-button ${controlsVisible ? 'show' : 'hide'}`}\n                        disabled={currentSlide === 0}\n                      >\n                        <ChevronLeft size={32} />\n                      </button>\n                      <button\n                        onClick={goToNextSlide}\n                        className={`nav-button next-button ${controlsVisible ? 'show' : 'hide'}`}\n                        disabled={currentSlide === slides.length - 1}\n                      >\n                        <ChevronRight size={32} />\n                      </button>\n                    </>\n                  )}\n                </div>\n              ) : (\n                <div className=\"empty-slideshow\">\n                  <div className=\"empty-content\">\n                    <Upload size={48} className=\"empty-icon\" />\n                    <p>Upload audio, images, and set timing</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Audio Controls */}\n            {audioFile && (\n              <div className={`audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''} ${controlsVisible ? 'show' : 'hide'}`}>\n                <audio\n                  ref={audioRef}\n                  src={audioFile}\n                  onLoadedMetadata={handleLoadedMetadata}\n                  onTimeUpdate={handleTimeUpdate}\n                  onEnded={() => setIsPlaying(false)}\n                  className=\"hidden-audio\"\n                />\n                \n                <div className=\"audio-controls-grid\">\n                  <button\n                    onClick={handlePlayPause}\n                    className=\"play-button\"\n                  >\n                    {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                  </button>\n                  \n                  <div className=\"seek-container\">\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={duration ? (currentTime / duration) * 100 : 0}\n                      onChange={handleSeek}\n                      className=\"seek-slider\"\n                    />\n                  </div>\n                  \n                  <div className=\"volume-control\">\n                    <Volume2 size={20} className=\"volume-icon\" />\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={volume}\n                      onChange={handleVolumeChange}\n                      className=\"volume-slider\"\n                    />\n                  </div>\n                </div>\n                \n                {!isFullscreen && (\n                  <button\n                    onClick={addSlideAtCurrentTime}\n                    disabled={!audioFile}\n                    className=\"add-slide-button\"\n                  >\n                    <Plus size={16} />\n                    Add Slide at {formatTime(currentTime)}\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Timing Editor */}\n          {!isFullscreen && (\n            <div className=\"timing-editor\">\n              <div className=\"editor-header\">\n                <div className=\"editor-title-section\">\n                  <h3 className=\"editor-title\">Timing Editor</h3>\n                  <div className=\"auto-shift-toggle\">\n                    <label className=\"toggle-label\">\n                      <input\n                        type=\"checkbox\"\n                        checked={autoShiftEnabled}\n                        onChange={(e) => setAutoShiftEnabled(e.target.checked)}\n                      />\n                      <span className=\"toggle-text\">Auto-Shift</span>\n                      <span className={`toggle-status ${autoShiftEnabled ? 'enabled' : 'disabled'}`}>\n                        {autoShiftEnabled ? 'ON' : 'OFF'}\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"editor-actions\">\n                  <button\n                    onClick={() => setSlides([])}\n                    disabled={slides.length === 0}\n                    className=\"clear-button\"\n                  >\n                    Clear All\n                  </button>\n                  <button\n                    onClick={exportToSRT}\n                    disabled={slides.length === 0}\n                    className=\"export-button\"\n                  >\n                    <Download size={14} />\n                    Export SRT\n                  </button>\n                </div>\n              </div>\n\n              {/* Preview Changes Panel */}\n              {previewChanges && (\n                <div className=\"preview-panel\">\n                  <div className=\"preview-header\">\n                    <span className=\"preview-warning\">\n                      Will shift {previewChanges.affectedSlides.length} slides\n                    </span>\n                    <div className=\"preview-actions\">\n                      <button onClick={applyPreviewChanges} className=\"apply-button\">\n                        Apply Changes\n                      </button>\n                      <button onClick={cancelPreviewChanges} className=\"cancel-button\">\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"preview-timeline\">\n                    {previewChanges.affectedSlides.slice(0, 3).map((slide, index) => (\n                      <div key={slide.id} className=\"preview-item\">\n                        <span className=\"preview-text\">{slide.text}</span>\n                        <span className=\"preview-time\">\n                          {formatSeconds(slide.startTime)} → {formatSeconds(slide.endTime)}\n                        </span>\n                      </div>\n                    ))}\n                    {previewChanges.affectedSlides.length > 3 && (\n                      <div className=\"preview-more\">\n                        +{previewChanges.affectedSlides.length - 3} more slides\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Slides Timeline */}\n              <div className=\"slides-timeline\">\n                {slides.map((slide, index) => (\n                  <div\n                    key={slide.id}\n                    className={`slide-item ${index === currentSlide ? 'active' : ''} ${editingSlideId === slide.id ? 'editing' : ''}`}\n                  >\n                    <div className=\"slide-grid\">\n                      <div className=\"slide-text-input\">\n                        <input\n                          type=\"text\"\n                          value={slide.text}\n                          onChange={(e) => updateSlideTime(slide.id, 'text', e.target.value)}\n                          className=\"timing-input\"\n                          placeholder=\"Slide text\"\n                        />\n                      </div>\n                      <div className=\"slide-time-display\">\n                        {editingSlideId === slide.id ? (\n                          <div className=\"time-editor\">\n                            <div className=\"time-inputs\">\n                              <div className=\"time-input-group\">\n                                <label>Start</label>\n                                <input\n                                  type=\"number\"\n                                  value={slide.startTime}\n                                  onChange={(e) => updateSlideTime(slide.id, 'startTime', e.target.value)}\n                                  step=\"0.1\"\n                                  min=\"0\"\n                                  className=\"timing-input\"\n                                />\n                                <div className=\"quick-adjust\">\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', -1)}>-1s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', -0.5)}>-0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', 0.5)}>+0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'startTime', 1)}>+1s</button>\n                                </div>\n                              </div>\n                              <div className=\"time-input-group\">\n                                <label>End</label>\n                                <input\n                                  type=\"number\"\n                                  value={slide.endTime}\n                                  onChange={(e) => updateSlideTime(slide.id, 'endTime', e.target.value)}\n                                  step=\"0.1\"\n                                  min=\"0\"\n                                  className={`timing-input ${autoShiftEnabled ? 'auto-shift-enabled' : ''}`}\n                                />\n                                <div className=\"quick-adjust\">\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', -1)}>-1s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', -0.5)}>-0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', 0.5)}>+0.5s</button>\n                                  <button onClick={() => adjustTime(slide.id, 'endTime', 1)}>+1s</button>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"timeline-bar\">\n                              <div className=\"timeline-progress\" style={{\n                                left: `${(slide.startTime / duration) * 100}%`,\n                                width: `${((slide.endTime - slide.startTime) / duration) * 100}%`\n                              }} />\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"time-display\">\n                            <span>{formatSeconds(slide.startTime)} → {formatSeconds(slide.endTime)}</span>\n                            <button\n                              onClick={() => setEditingSlideId(slide.id)}\n                              className=\"edit-button\"\n                            >\n                              <Pencil size={14} />\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"slide-actions\">\n                        {editingSlideId === slide.id ? (\n                          <button\n                            onClick={() => setEditingSlideId(null)}\n                            className=\"check-button\"\n                          >\n                            <Check size={14} />\n                          </button>\n                        ) : (\n                          <button\n                            onClick={() => deleteSlide(slide.id)}\n                            className=\"delete-button\"\n                          >\n                            <Trash2 size={14} />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                \n                {slides.length === 0 && (\n                  <div className=\"empty-timeline\">\n                    <Clock size={32} className=\"empty-icon\" />\n                    <p>No slides added yet</p>\n                    <p className=\"empty-subtext\">Upload images and add timing, or use SRT file</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Instructions - Hidden in fullscreen */}\n        {!isFullscreen && (\n          <div className=\"instructions-section\">\n            <div className=\"instructions-grid\">\n              <div>\n                <h3 className=\"instructions-title\">Manual Timing:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Upload audio and images</li>\n                  <li>Play audio and click \"Add Slide at [time]\" for each slide</li>\n                  <li>Edit slide text and timing in the editor</li>\n                  <li>Export to SRT if needed</li>\n                </ol>\n              </div>\n              <div>\n                <h3 className=\"instructions-title\">SRT File Method:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Create or download SRT subtitle file</li>\n                  <li>Upload audio and images</li>\n                  <li>Upload SRT file - timing will be applied automatically</li>\n                  <li>Fine-tune timing if needed</li>\n                </ol>\n              </div>\n            </div>\n            \n            <div className=\"srt-example\">\n              <h4 className=\"example-title\">SRT Format Example:</h4>\n              <pre className=\"example-code\">\n{`1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`}\n              </pre>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSlideshow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}