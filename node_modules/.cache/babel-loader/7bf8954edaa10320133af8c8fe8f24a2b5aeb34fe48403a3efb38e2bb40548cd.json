{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smith\\\\Documents\\\\slideshow-music-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvancedSlideshow = () => {\n  _s();\n  var _images, _slides$currentSlide, _slides$currentSlide2;\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n\n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = event => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Convert time string to seconds\n  const timeToSeconds = timeStr => {\n    // Support format: mm:ss atau mm:ss.sss\n    const parts = timeStr.split(':');\n    if (parts.length === 2) {\n      const minutes = parseInt(parts[0]) || 0;\n      const seconds = parseFloat(parts[1]) || 0;\n      return minutes * 60 + seconds;\n    }\n    return 0;\n  };\n\n  // Convert seconds to time string\n  const secondsToTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins.toString().padStart(2, '0')}:${secs.padStart(4, '0')}`;\n  };\n\n  // Parse SRT file\n  const parseSRT = srtText => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n\n        // Parse time format: 00:00:10,500 --> 00:00:13,240\n        const timeMatch = timeLine.match(/(\\d{2}:\\d{2}:\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}:\\d{2}:\\d{2}),(\\d{3})/);\n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n\n          // Use first line as text, or combine all text lines\n          const text = textLines.join(' ').trim();\n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n    return parsedSlides;\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const srtText = e.target.result;\n        console.log('SRT content:', srtText);\n        const parsedSlides = parseSRT(srtText);\n        console.log('Parsed slides:', parsedSlides);\n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Handle audio file upload\n  const handleAudioUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({\n          url,\n          name: file.name\n        });\n      }\n    });\n    setImages(imageUrls);\n    setCurrentSlide(0);\n\n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = imageCount => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10,\n        // Default 10 seconds per slide\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  const handleSeek = e => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = e.target.value / 100 * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Manual slide timing editor\n  const updateSlideTime = (slideId, field, value) => {\n    setSlides(slides.map(slide => slide.id === slideId ? {\n      ...slide,\n      [field]: field === 'text' ? value : timeToSeconds(value)\n    } : slide));\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = slideId => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    const blob = new Blob([srtContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor(seconds % 1 * 1000);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isFullscreen ? 'fullscreen' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [!isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-title\",\n          children: \"Advanced Slideshow with Custom Timing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Audio File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \"audio/*\",\n                onChange: handleAudioUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRef$current;\n                  return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                },\n                className: \"upload-button audio-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this), \"Choose Audio\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: imageInputRef,\n                type: \"file\",\n                accept: \"image/*\",\n                multiple: true,\n                onChange: handleImagesUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _imageInputRef$curren;\n                  return (_imageInputRef$curren = imageInputRef.current) === null || _imageInputRef$curren === void 0 ? void 0 : _imageInputRef$curren.click();\n                },\n                className: \"upload-button image-button\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this), \"Images (\", images.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-label\",\n                children: \"Upload SRT File (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: srtInputRef,\n                type: \"file\",\n                accept: \".srt\",\n                onChange: handleSRTUpload,\n                className: \"hidden-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _srtInputRef$current;\n                  return (_srtInputRef$current = srtInputRef.current) === null || _srtInputRef$current === void 0 ? void 0 : _srtInputRef$current.click();\n                },\n                className: \"upload-button srt-button\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), \"SRT Timing\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timing-mode\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'manual' ? 'active' : ''}`,\n              children: \"Manual Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mode-indicator ${timingMode === 'srt' ? 'active' : ''}`,\n              children: [\"SRT Timing \", srtFile && `(${srtFile})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`,\n          ref: slideshowRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slideshow-display\",\n            children: images.length > 0 && slides.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_images = images[((_slides$currentSlide = slides[currentSlide]) === null || _slides$currentSlide === void 0 ? void 0 : _slides$currentSlide.imageIndex) || 0]) === null || _images === void 0 ? void 0 : _images.url,\n                alt: `Slide ${currentSlide + 1}`,\n                className: \"slide-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-text-container\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"slide-text\",\n                  children: ((_slides$currentSlide2 = slides[currentSlide]) === null || _slides$currentSlide2 === void 0 ? void 0 : _slides$currentSlide2.text) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-counter\",\n                children: [currentSlide + 1, \" / \", slides.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-counter\",\n                children: [formatTime(currentTime), \" / \", formatTime(duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleFullscreen,\n                className: \"fullscreen-button\",\n                title: isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n                children: isFullscreen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this), isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToPreviousSlide,\n                  className: \"nav-button prev-button\",\n                  disabled: currentSlide === 0,\n                  children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: goToNextSlide,\n                  className: \"nav-button next-button\",\n                  disabled: currentSlide === slides.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, currentSlide, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-slideshow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-content\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 48,\n                  className: \"empty-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload audio, images, and set timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), audioFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              ref: audioRef,\n              src: audioFile,\n              onLoadedMetadata: handleLoadedMetadata,\n              onTimeUpdate: handleTimeUpdate,\n              onEnded: () => setIsPlaying(false),\n              className: \"hidden-audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-controls-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePlayPause,\n                className: \"play-button\",\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seek-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: duration ? currentTime / duration * 100 : 0,\n                  onChange: handleSeek,\n                  className: \"seek-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-control\",\n                children: [/*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 20,\n                  className: \"volume-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"1\",\n                  step: \"0.1\",\n                  value: volume,\n                  onChange: handleVolumeChange,\n                  className: \"volume-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addSlideAtCurrentTime,\n              disabled: !audioFile,\n              className: \"add-slide-button\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 21\n              }, this), \"Add Slide at \", formatTime(currentTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timing-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"editor-title\",\n              children: \"Timing Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSlides([]),\n                disabled: slides.length === 0,\n                className: \"clear-button\",\n                children: \"Clear All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: exportToSRT,\n                disabled: slides.length === 0,\n                className: \"export-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), \"Export SRT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slides-timeline\",\n            children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `slide-item ${index === currentSlide ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slide-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-text-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: slide.text,\n                    onChange: e => updateSlideTime(slide.id, 'text', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"Slide text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: secondsToTime(slide.startTime),\n                    onChange: e => updateSlideTime(slide.id, 'startTime', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"Start time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-time-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: secondsToTime(slide.endTime),\n                    onChange: e => updateSlideTime(slide.id, 'endTime', e.target.value),\n                    className: \"timing-input\",\n                    placeholder: \"End time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slide-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteSlide(slide.id),\n                    className: \"delete-button\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 21\n              }, this)\n            }, slide.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 19\n            }, this)), slides.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-timeline\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                size: 32,\n                className: \"empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No slides added yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-subtext\",\n                children: \"Upload images and add timing, or use SRT file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), !isFullscreen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"Manual Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Play audio and click \\\"Add Slide at [time]\\\" for each slide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Edit slide text and timing in the editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Export to SRT if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"instructions-title\",\n              children: \"SRT File Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"instructions-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Create or download SRT subtitle file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload audio and images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload SRT file - timing will be applied automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Fine-tune timing if needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"srt-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"example-title\",\n            children: \"SRT Format Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"example-code\",\n            children: `1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedSlideshow, \"IimpaIJhN5lwYD4BEYADmv65MVc=\");\n_c = AdvancedSlideshow;\nexport default AdvancedSlideshow;\nvar _c;\n$RefreshReg$(_c, \"AdvancedSlideshow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Play","Pause","Upload","Volume2","Plus","Download","Trash2","Clock","FileText","Maximize2","Minimize2","ChevronLeft","ChevronRight","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvancedSlideshow","_s","_images","_slides$currentSlide","_slides$currentSlide2","audioFile","setAudioFile","images","setImages","currentSlide","setCurrentSlide","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","isFullscreen","setIsFullscreen","slides","setSlides","srtFile","setSrtFile","timingMode","setTimingMode","audioRef","fileInputRef","imageInputRef","srtInputRef","slideshowRef","toggleFullscreen","document","fullscreenElement","current","requestFullscreen","err","console","error","exitFullscreen","handleFullscreenChange","addEventListener","removeEventListener","handleEscKey","event","key","goToNextSlide","length","goToPreviousSlide","activeSlide","i","startTime","timeToSeconds","timeStr","parts","split","minutes","parseInt","seconds","parseFloat","secondsToTime","mins","Math","floor","secs","toFixed","toString","padStart","parseSRT","srtText","blocks","trim","parsedSlides","forEach","block","index","lines","timeLine","textLines","slice","timeMatch","match","startH","startM","startS","startMs","endH","endM","endS","endMs","endTime","text","join","push","id","Date","now","imageIndex","min","handleSRTUpload","file","target","files","name","endsWith","reader","FileReader","onload","e","result","log","alert","readAsText","value","handleAudioUpload","type","startsWith","url","URL","createObjectURL","handleImagesUpload","Array","from","imageUrls","createDefaultSlides","imageCount","defaultSlides","handleLoadedMetadata","handleTimeUpdate","handlePlayPause","pause","play","handleVolumeChange","newVolume","handleSeek","seekTime","updateSlideTime","slideId","field","map","slide","addSlideAtCurrentTime","newSlide","updatedSlides","sort","a","b","deleteSlide","filter","exportToSRT","srtContent","formatSRTTime","blob","Blob","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","hours","ms","formatTime","time","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","onClick","_fileInputRef$current","size","multiple","_imageInputRef$curren","_srtInputRef$current","src","alt","title","disabled","onLoadedMetadata","onTimeUpdate","onEnded","max","step","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Smith/Documents/slideshow-music-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Play, Pause, Upload, Volume2, Plus, Download, Trash2, Clock, FileText, Maximize2, Minimize2, ChevronLeft, ChevronRight } from 'lucide-react';\nimport './App.css';\n\nconst AdvancedSlideshow = () => {\n  const [audioFile, setAudioFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  \n  // Advanced timing system\n  const [slides, setSlides] = useState([]);\n  const [srtFile, setSrtFile] = useState(null);\n  const [timingMode, setTimingMode] = useState('manual'); // 'manual' or 'srt'\n  \n  const audioRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n  const srtInputRef = useRef(null);\n  const slideshowRef = useRef(null);\n\n  // Fullscreen handlers\n  const toggleFullscreen = async () => {\n    if (!document.fullscreenElement) {\n      try {\n        await slideshowRef.current.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        console.error('Error attempting to enable fullscreen:', err);\n      }\n    } else {\n      try {\n        await document.exitFullscreen();\n        setIsFullscreen(false);\n      } catch (err) {\n        console.error('Error attempting to exit fullscreen:', err);\n      }\n    }\n  };\n\n  // Handle fullscreen change events\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape' && isFullscreen) {\n        document.exitFullscreen();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n    };\n  }, [isFullscreen]);\n\n  // Navigation handlers\n  const goToNextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const goToPreviousSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  // Update slide berdasarkan timing\n  useEffect(() => {\n    if (slides.length > 0 && currentTime > 0) {\n      let activeSlide = 0;\n      for (let i = slides.length - 1; i >= 0; i--) {\n        if (currentTime >= slides[i].startTime) {\n          activeSlide = i;\n          break;\n        }\n      }\n      \n      if (activeSlide !== currentSlide) {\n        setCurrentSlide(activeSlide);\n      }\n    }\n  }, [currentTime, slides, currentSlide]);\n\n  // Convert time string to seconds\n  const timeToSeconds = (timeStr) => {\n    // Support format: mm:ss atau mm:ss.sss\n    const parts = timeStr.split(':');\n    if (parts.length === 2) {\n      const minutes = parseInt(parts[0]) || 0;\n      const seconds = parseFloat(parts[1]) || 0;\n      return minutes * 60 + seconds;\n    }\n    return 0;\n  };\n\n  // Convert seconds to time string\n  const secondsToTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins.toString().padStart(2, '0')}:${secs.padStart(4, '0')}`;\n  };\n\n  // Parse SRT file\n  const parseSRT = (srtText) => {\n    const blocks = srtText.trim().split('\\n\\n');\n    const parsedSlides = [];\n\n    blocks.forEach((block, index) => {\n      const lines = block.split('\\n');\n      if (lines.length >= 3) {\n        const timeLine = lines[1];\n        const textLines = lines.slice(2);\n        \n        // Parse time format: 00:00:10,500 --> 00:00:13,240\n        const timeMatch = timeLine.match(/(\\d{2}:\\d{2}:\\d{2}),(\\d{3})\\s*-->\\s*(\\d{2}:\\d{2}:\\d{2}),(\\d{3})/);\n        \n        if (timeMatch) {\n          const [, startH, startM, startS, startMs, endH, endM, endS, endMs] = timeMatch;\n          \n          const startTime = parseInt(startH) * 3600 + parseInt(startM) * 60 + parseInt(startS) + parseInt(startMs) / 1000;\n          const endTime = parseInt(endH) * 3600 + parseInt(endM) * 60 + parseInt(endS) + parseInt(endMs) / 1000;\n          \n          // Use first line as text, or combine all text lines\n          const text = textLines.join(' ').trim();\n          \n          parsedSlides.push({\n            id: Date.now() + index,\n            text: text,\n            startTime: startTime,\n            endTime: endTime,\n            imageIndex: Math.min(index, images.length - 1)\n          });\n        }\n      }\n    });\n\n    return parsedSlides;\n  };\n\n  // Handle SRT file upload\n  const handleSRTUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const srtText = e.target.result;\n        console.log('SRT content:', srtText);\n        \n        const parsedSlides = parseSRT(srtText);\n        console.log('Parsed slides:', parsedSlides);\n        \n        if (parsedSlides.length > 0) {\n          setSlides(parsedSlides);\n          setSrtFile(file.name);\n          setTimingMode('srt');\n          setCurrentSlide(0);\n        } else {\n          alert('Could not parse SRT file. Please check the format.');\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please select a valid .srt file');\n    }\n    event.target.value = '';\n  };\n\n  // Handle audio file upload\n  const handleAudioUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const url = URL.createObjectURL(file);\n      setAudioFile(url);\n      setCurrentTime(0);\n      setCurrentSlide(0);\n      setIsPlaying(false);\n    }\n    event.target.value = '';\n  };\n\n  // Handle image files upload\n  const handleImagesUpload = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    \n    const imageUrls = [];\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const url = URL.createObjectURL(file);\n        imageUrls.push({ url, name: file.name });\n      }\n    });\n    \n    setImages(imageUrls);\n    setCurrentSlide(0);\n    \n    // If no slides yet, create default slides\n    if (slides.length === 0 && timingMode === 'manual') {\n      createDefaultSlides(imageUrls.length);\n    }\n    \n    event.target.value = '';\n  };\n\n  // Create default manual slides\n  const createDefaultSlides = (imageCount) => {\n    const defaultSlides = [];\n    for (let i = 0; i < imageCount; i++) {\n      defaultSlides.push({\n        id: Date.now() + i,\n        text: `Slide ${i + 1}`,\n        startTime: i * 10, // Default 10 seconds per slide\n        endTime: (i + 1) * 10,\n        imageIndex: i\n      });\n    }\n    setSlides(defaultSlides);\n  };\n\n  // Audio event handlers\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handlePlayPause = async () => {\n    if (audioRef.current) {\n      try {\n        if (isPlaying) {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        } else {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Play error:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const handleSeek = (e) => {\n    if (audioRef.current && duration > 0) {\n      const seekTime = (e.target.value / 100) * duration;\n      audioRef.current.currentTime = seekTime;\n      setCurrentTime(seekTime);\n    }\n  };\n\n  // Manual slide timing editor\n  const updateSlideTime = (slideId, field, value) => {\n    setSlides(slides.map(slide => \n      slide.id === slideId \n        ? { ...slide, [field]: field === 'text' ? value : timeToSeconds(value) }\n        : slide\n    ));\n  };\n\n  // Add slide at current time\n  const addSlideAtCurrentTime = () => {\n    const newSlide = {\n      id: Date.now(),\n      text: `Slide ${slides.length + 1}`,\n      startTime: currentTime,\n      endTime: currentTime + 10,\n      imageIndex: Math.min(slides.length, images.length - 1)\n    };\n    \n    const updatedSlides = [...slides, newSlide].sort((a, b) => a.startTime - b.startTime);\n    setSlides(updatedSlides);\n    setTimingMode('manual');\n  };\n\n  // Delete slide\n  const deleteSlide = (slideId) => {\n    setSlides(slides.filter(slide => slide.id !== slideId));\n  };\n\n  // Export current timing as SRT\n  const exportToSRT = () => {\n    let srtContent = '';\n    slides.forEach((slide, index) => {\n      const startTime = formatSRTTime(slide.startTime);\n      const endTime = formatSRTTime(slide.endTime);\n      \n      srtContent += `${index + 1}\\n`;\n      srtContent += `${startTime} --> ${endTime}\\n`;\n      srtContent += `${slide.text}\\n\\n`;\n    });\n    \n    const blob = new Blob([srtContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'slideshow-timing.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format time for SRT export\n  const formatSRTTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    const ms = Math.floor((seconds % 1) * 1000);\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')},${ms.toString().padStart(3, '0')}`;\n  };\n\n  const formatTime = (time) => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className={`app-container ${isFullscreen ? 'fullscreen' : ''}`}>\n      <div className=\"app-content\">\n        {!isFullscreen && (\n          <>\n            <h1 className=\"app-title\">\n              Advanced Slideshow with Custom Timing\n            </h1>\n            \n            {/* Upload Section */}\n            <div className=\"upload-section\">\n              <div className=\"upload-grid\">\n                <div>\n                  <label className=\"upload-label\">\n                    Upload Audio File\n                  </label>\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    onChange={handleAudioUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"upload-button audio-button\"\n                  >\n                    <Upload size={20} />\n                    Choose Audio\n                  </button>\n                </div>\n                \n                <div>\n                  <label className=\"upload-label\">\n                    Upload Images\n                  </label>\n                  <input\n                    ref={imageInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImagesUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => imageInputRef.current?.click()}\n                    className=\"upload-button image-button\"\n                  >\n                    <Upload size={20} />\n                    Images ({images.length})\n                  </button>\n                </div>\n\n                <div>\n                  <label className=\"upload-label\">\n                    Upload SRT File (Optional)\n                  </label>\n                  <input\n                    ref={srtInputRef}\n                    type=\"file\"\n                    accept=\".srt\"\n                    onChange={handleSRTUpload}\n                    className=\"hidden-input\"\n                  />\n                  <button\n                    onClick={() => srtInputRef.current?.click()}\n                    className=\"upload-button srt-button\"\n                  >\n                    <FileText size={20} />\n                    SRT Timing\n                  </button>\n                </div>\n              </div>\n\n              {/* Timing Mode Indicator */}\n              <div className=\"timing-mode\">\n                <div className={`mode-indicator ${timingMode === 'manual' ? 'active' : ''}`}>\n                  Manual Timing\n                </div>\n                <div className={`mode-indicator ${timingMode === 'srt' ? 'active' : ''}`}>\n                  SRT Timing {srtFile && `(${srtFile})`}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className={`main-grid ${isFullscreen ? 'fullscreen-grid' : ''}`}>\n          {/* Slideshow Display */}\n          <div className={`slideshow-container ${isFullscreen ? 'fullscreen-slideshow' : ''}`} ref={slideshowRef}>\n            <div className=\"slideshow-display\">\n              {images.length > 0 && slides.length > 0 ? (\n                <div className=\"slide-content\" key={currentSlide}>\n                  <img\n                    src={images[slides[currentSlide]?.imageIndex || 0]?.url}\n                    alt={`Slide ${currentSlide + 1}`}\n                    className=\"slide-image\"\n                  />\n                  <div className=\"slide-text-container\">\n                    <p className=\"slide-text\">\n                      {slides[currentSlide]?.text || ''}\n                    </p>\n                  </div>\n                  <div className=\"slide-counter\">\n                    {currentSlide + 1} / {slides.length}\n                  </div>\n                  <div className=\"time-counter\">\n                    {formatTime(currentTime)} / {formatTime(duration)}\n                  </div>\n                  \n                  {/* Fullscreen Controls */}\n                  <button\n                    onClick={toggleFullscreen}\n                    className=\"fullscreen-button\"\n                    title={isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\n                  >\n                    {isFullscreen ? <Minimize2 size={24} /> : <Maximize2 size={24} />}\n                  </button>\n\n                  {/* Navigation Controls (visible in fullscreen) */}\n                  {isFullscreen && (\n                    <>\n                      <button\n                        onClick={goToPreviousSlide}\n                        className=\"nav-button prev-button\"\n                        disabled={currentSlide === 0}\n                      >\n                        <ChevronLeft size={32} />\n                      </button>\n                      <button\n                        onClick={goToNextSlide}\n                        className=\"nav-button next-button\"\n                        disabled={currentSlide === slides.length - 1}\n                      >\n                        <ChevronRight size={32} />\n                      </button>\n                    </>\n                  )}\n                </div>\n              ) : (\n                <div className=\"empty-slideshow\">\n                  <div className=\"empty-content\">\n                    <Upload size={48} className=\"empty-icon\" />\n                    <p>Upload audio, images, and set timing</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Audio Controls */}\n            {audioFile && (\n              <div className={`audio-controls ${isFullscreen ? 'fullscreen-audio-controls' : ''}`}>\n                <audio\n                  ref={audioRef}\n                  src={audioFile}\n                  onLoadedMetadata={handleLoadedMetadata}\n                  onTimeUpdate={handleTimeUpdate}\n                  onEnded={() => setIsPlaying(false)}\n                  className=\"hidden-audio\"\n                />\n                \n                <div className=\"audio-controls-grid\">\n                  <button\n                    onClick={handlePlayPause}\n                    className=\"play-button\"\n                  >\n                    {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                  </button>\n                  \n                  <div className=\"seek-container\">\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={duration ? (currentTime / duration) * 100 : 0}\n                      onChange={handleSeek}\n                      className=\"seek-slider\"\n                    />\n                  </div>\n                  \n                  <div className=\"volume-control\">\n                    <Volume2 size={20} className=\"volume-icon\" />\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={volume}\n                      onChange={handleVolumeChange}\n                      className=\"volume-slider\"\n                    />\n                  </div>\n                </div>\n                \n                {!isFullscreen && (\n                  <button\n                    onClick={addSlideAtCurrentTime}\n                    disabled={!audioFile}\n                    className=\"add-slide-button\"\n                  >\n                    <Plus size={16} />\n                    Add Slide at {formatTime(currentTime)}\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Timing Editor - Hidden in fullscreen */}\n          {!isFullscreen && (\n            <div className=\"timing-editor\">\n              <div className=\"editor-header\">\n                <h3 className=\"editor-title\">Timing Editor</h3>\n                <div className=\"editor-actions\">\n                  <button\n                    onClick={() => setSlides([])}\n                    disabled={slides.length === 0}\n                    className=\"clear-button\"\n                  >\n                    Clear All\n                  </button>\n                  <button\n                    onClick={exportToSRT}\n                    disabled={slides.length === 0}\n                    className=\"export-button\"\n                  >\n                    <Download size={14} />\n                    Export SRT\n                  </button>\n                </div>\n              </div>\n\n              {/* Slides Timeline */}\n              <div className=\"slides-timeline\">\n                {slides.map((slide, index) => (\n                  <div\n                    key={slide.id}\n                    className={`slide-item ${index === currentSlide ? 'active' : ''}`}\n                  >\n                    <div className=\"slide-grid\">\n                      <div className=\"slide-text-input\">\n                        <input\n                          type=\"text\"\n                          value={slide.text}\n                          onChange={(e) => updateSlideTime(slide.id, 'text', e.target.value)}\n                          className=\"timing-input\"\n                          placeholder=\"Slide text\"\n                        />\n                      </div>\n                      <div className=\"slide-time-input\">\n                        <input\n                          type=\"text\"\n                          value={secondsToTime(slide.startTime)}\n                          onChange={(e) => updateSlideTime(slide.id, 'startTime', e.target.value)}\n                          className=\"timing-input\"\n                          placeholder=\"Start time\"\n                        />\n                      </div>\n                      <div className=\"slide-time-input\">\n                        <input\n                          type=\"text\"\n                          value={secondsToTime(slide.endTime)}\n                          onChange={(e) => updateSlideTime(slide.id, 'endTime', e.target.value)}\n                          className=\"timing-input\"\n                          placeholder=\"End time\"\n                        />\n                      </div>\n                      <div className=\"slide-actions\">\n                        <button\n                          onClick={() => deleteSlide(slide.id)}\n                          className=\"delete-button\"\n                        >\n                          <Trash2 size={14} />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                \n                {slides.length === 0 && (\n                  <div className=\"empty-timeline\">\n                    <Clock size={32} className=\"empty-icon\" />\n                    <p>No slides added yet</p>\n                    <p className=\"empty-subtext\">Upload images and add timing, or use SRT file</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Instructions - Hidden in fullscreen */}\n        {!isFullscreen && (\n          <div className=\"instructions-section\">\n            <div className=\"instructions-grid\">\n              <div>\n                <h3 className=\"instructions-title\">Manual Timing:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Upload audio and images</li>\n                  <li>Play audio and click \"Add Slide at [time]\" for each slide</li>\n                  <li>Edit slide text and timing in the editor</li>\n                  <li>Export to SRT if needed</li>\n                </ol>\n              </div>\n              <div>\n                <h3 className=\"instructions-title\">SRT File Method:</h3>\n                <ol className=\"instructions-list\">\n                  <li>Create or download SRT subtitle file</li>\n                  <li>Upload audio and images</li>\n                  <li>Upload SRT file - timing will be applied automatically</li>\n                  <li>Fine-tune timing if needed</li>\n                </ol>\n              </div>\n            </div>\n            \n            <div className=\"srt-example\">\n              <h4 className=\"example-title\">SRT Format Example:</h4>\n              <pre className=\"example-code\">\n{`1\n00:00:00,500 --> 00:00:04,000\nFirst slide text\n\n2\n00:00:04,000 --> 00:00:08,500\nSecond slide text`}\n              </pre>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSlideshow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}